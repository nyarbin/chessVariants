# Makefile.in generated by automake 1.12.4 from Makefile.am.
# agent/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/cadiaplayer
pkgincludedir = $(includedir)/cadiaplayer
pkglibdir = $(libdir)/cadiaplayer
pkglibexecdir = $(libexecdir)/cadiaplayer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = cadiaplayer$(EXEEXT)
#am__append_1 = ../logic/eclipsecontroller.cpp ../logic/eclipsecontroller.h
am__append_2 = ../logic/prologcontroller.cpp ../logic/prologcontroller.h
am__append_3 = ../logic/breakthroughcontroller.cpp ../logic/breakthroughcontroller.h \
							../logic/games/breakthrough.cpp ../logic/games/breakthrough.h 

subdir = agent
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__cadiaplayer_SOURCES_DIST = cadiaplayer.cpp \
	../logic/gamecontroller.cpp ../logic/gamecontroller.h \
	../logic/eclipsecontroller.cpp ../logic/eclipsecontroller.h \
	../logic/prologcontroller.cpp ../logic/prologcontroller.h \
	../logic/breakthroughcontroller.cpp \
	../logic/breakthroughcontroller.h \
	../logic/games/breakthrough.cpp ../logic/games/breakthrough.h \
	gmprotocol.cpp gmprotocol.h agent.cpp agent.h \
	../play/shmemutils/shincupdmap.cpp \
	../play/shmemutils/shincupdmap.h \
	../play/shmemutils/shkeymap.cpp ../play/shmemutils/shkeymap.h \
	../play/gametheory.cpp ../play/gametheory.h ../play/move.cpp \
	../play/move.h ../play/heuristic/heuristic.h \
	../play/players/gameplayer.h ../play/parsing/compound.cpp \
	../play/parsing/compound.h ../play/parsing/variable.cpp \
	../play/parsing/variable.h ../play/parsing/symtab.cpp \
	../play/parsing/symtab.h ../play/parsing/gameparser.cpp \
	../play/parsing/gameparser.h ../play/parsing/token.h \
	../play/utils/gamestatespace.cpp \
	../play/utils/gamestatespace.h ../play/utils/multistate.cpp \
	../play/utils/multistate.h ../play/utils/multitree.cpp \
	../play/utils/multitree.h ../play/utils/multistack.cpp \
	../play/utils/multistack.h ../logic/prologutils.h \
	../logic/utils/domainanalyzer.cpp \
	../logic/utils/domainanalyzer.h \
	../play/utils/binaryrelation.cpp \
	../play/utils/binaryrelation.h \
	../play/utils/relationcounter.cpp \
	../play/utils/relationcounter.h ../logic/utils/sstate.cpp \
	../logic/utils/sstate.h ../logic/utils/sterm.cpp \
	../logic/utils/sterm.h ../logic/utils/smove.h \
	../logic/utils/smovetable.h ../utils/tcpserver.cpp \
	../utils/tcpserver.h ../utils/worker.cpp ../utils/worker.h \
	../utils/longlonghash.h ../utils/stringhash.h \
	../utils/statistics.cpp ../utils/statistics.h \
	../utils/logger.cpp ../utils/logger.h ../utils/timer.h \
	../utils/streamutils.h ../utils/strutils.h \
	../utils/settings.cpp ../utils/settings.h \
	../play/utils/movetrails.cpp ../play/utils/movetrails.h \
	../play/kits/goalstabilitykit.cpp \
	../play/kits/goalstabilitykit.h \
	../play/players/selectionplayer.cpp \
	../play/players/selectionplayer.h \
	../play/players/mcmemoryplayer.cpp \
	../play/players/mcmemoryplayer.h ../play/players/mcplayer.cpp \
	../play/players/mcplayer.h ../play/utils/gt_file.cpp \
	../play/utils/gt_file.h ../play/utils/gt_log.cpp \
	../play/utils/gt_log.h ../play/utils/gtv_data.h \
	../play/players/pastplayer.cpp ../play/players/pastplayer.h \
	../play/players/tomastplayer.cpp \
	../play/players/tomastplayer.h ../play/players/mastplayer.cpp \
	../play/players/mastplayer.h \
	../play/players/uctrolloutplayer.cpp \
	../play/players/uctrolloutplayer.h \
	../play/players/uctplayer.cpp ../play/players/uctplayer.h \
	../play/players/pastraveplayer.cpp \
	../play/players/pastraveplayer.h \
	../play/players/tomastraveplayer.cpp \
	../play/players/tomastraveplayer.h \
	../play/players/mastraveplayer.cpp \
	../play/players/mastraveplayer.h \
	../play/players/uctraveplayer.cpp \
	../play/players/uctraveplayer.h \
	../play/players/uctraverolloutplayer.cpp \
	../play/players/uctraverolloutplayer.h \
	../play/players/fastplayer.cpp ../play/players/fastplayer.h \
	../play/players/fastraveplayer.cpp \
	../play/players/fastraveplayer.h \
	../play/players/fastmastplayer.cpp \
	../play/players/fastmastplayer.h \
	../play/players/fastmastraveplayer.cpp \
	../play/players/fastmastraveplayer.h \
	../play/players/fasttomastplayer.cpp \
	../play/players/fasttomastplayer.h \
	../play/players/fasttomastraveplayer.cpp \
	../play/players/fasttomastraveplayer.h \
	../play/players/fastpastplayer.cpp \
	../play/players/fastpastplayer.h \
	../play/players/fastpastraveplayer.cpp \
	../play/players/fastpastraveplayer.h ../play/tiling/tiling.h \
	../play/tiling/tilings.h ../play/tiling/tilecoding.cpp \
	../play/tiling/tilecoding.h \
	../play/tiling/tilecodinglearner.cpp \
	../play/tiling/tilecodinglearner.h \
	../play/tiling/valuetiling.cpp ../play/tiling/valuetiling.h \
	../play/tiling/compoundtiling.cpp \
	../play/tiling/compoundtiling.h \
	../play/tiling/compoundvaluetiling.cpp \
	../play/tiling/compoundvaluetiling.h \
	../play/tiling/compoundmultivaluetiling.cpp \
	../play/tiling/compoundmultivaluetiling.h \
	../play/tiling/rolepiecetiling.cpp \
	../play/tiling/rolepiecetiling.h \
	../play/tiling/piecevaluetiling.cpp \
	../play/tiling/piecevaluetiling.h \
	../play/kits/tilingplayerkit.cpp \
	../play/kits/tilingplayerkit.h \
	../play/players/randomplayer.cpp \
	../play/players/randomplayer.h \
	../play/utils/movepredicatefeature.cpp \
	../play/utils/movepredicatefeature.h ../play/utils/episode.cpp \
	../play/utils/episode.h
#am__objects_1 = eclipsecontroller.$(OBJEXT)
am__objects_2 = prologcontroller.$(OBJEXT)
am__objects_3 =  \
	breakthroughcontroller.$(OBJEXT) \
	breakthrough.$(OBJEXT)
am__objects_4 = gamecontroller.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
am__objects_5 = $(am__objects_4) gmprotocol.$(OBJEXT) agent.$(OBJEXT) \
	shincupdmap.$(OBJEXT) shkeymap.$(OBJEXT) gametheory.$(OBJEXT) \
	move.$(OBJEXT) compound.$(OBJEXT) variable.$(OBJEXT) \
	symtab.$(OBJEXT) gameparser.$(OBJEXT) gamestatespace.$(OBJEXT) \
	multistate.$(OBJEXT) multitree.$(OBJEXT) multistack.$(OBJEXT) \
	domainanalyzer.$(OBJEXT) binaryrelation.$(OBJEXT) \
	relationcounter.$(OBJEXT) sstate.$(OBJEXT) sterm.$(OBJEXT) \
	tcpserver.$(OBJEXT) worker.$(OBJEXT) statistics.$(OBJEXT) \
	logger.$(OBJEXT) settings.$(OBJEXT) movetrails.$(OBJEXT)
am__objects_6 = $(am__objects_5) goalstabilitykit.$(OBJEXT) \
	selectionplayer.$(OBJEXT) mcmemoryplayer.$(OBJEXT) \
	mcplayer.$(OBJEXT) gt_file.$(OBJEXT) gt_log.$(OBJEXT)
am__objects_7 = $(am__objects_6) pastplayer.$(OBJEXT) \
	tomastplayer.$(OBJEXT) mastplayer.$(OBJEXT) \
	uctrolloutplayer.$(OBJEXT) uctplayer.$(OBJEXT)
am__objects_8 = pastraveplayer.$(OBJEXT) tomastraveplayer.$(OBJEXT) \
	mastraveplayer.$(OBJEXT) uctraveplayer.$(OBJEXT) \
	uctraverolloutplayer.$(OBJEXT) fastplayer.$(OBJEXT) \
	fastraveplayer.$(OBJEXT) fastmastplayer.$(OBJEXT) \
	fastmastraveplayer.$(OBJEXT) fasttomastplayer.$(OBJEXT) \
	fasttomastraveplayer.$(OBJEXT) fastpastplayer.$(OBJEXT) \
	fastpastraveplayer.$(OBJEXT)
am__objects_9 = tilecoding.$(OBJEXT) tilecodinglearner.$(OBJEXT) \
	valuetiling.$(OBJEXT) compoundtiling.$(OBJEXT) \
	compoundvaluetiling.$(OBJEXT) \
	compoundmultivaluetiling.$(OBJEXT) rolepiecetiling.$(OBJEXT) \
	piecevaluetiling.$(OBJEXT) tilingplayerkit.$(OBJEXT) \
	randomplayer.$(OBJEXT) movepredicatefeature.$(OBJEXT) \
	episode.$(OBJEXT)
am_cadiaplayer_OBJECTS = cadiaplayer.$(OBJEXT) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9)
cadiaplayer_OBJECTS = $(am_cadiaplayer_OBJECTS)
cadiaplayer_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(cadiaplayer_SOURCES)
DIST_SOURCES = $(am__cadiaplayer_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/missing --run automake-1.12
AWK = mawk
BOOST_CPPFLAGS = -I/home/azhu8/Documents/DM425/boost_1_60_0
BOOST_LDFLAGS = -L/home/azhu8/Documents/DM425/boost_1_60_0/stage/lib
BOOST_SYSTEM_LIB = -lboost_system
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -O3
CPP = gcc -E
CPPFLAGS =  -I/home/azhu8/Documents/DM425/boost_1_60_0 -Wno-deprecated
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -O3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -L/home/azhu8/Documents/DM425/boost_1_60_0/stage/lib
LEX = :
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = -lYap -ldl -lm -lreadline -lncurses -lgmp  -lboost_system -lpthread
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = cadiaplayer
PACKAGE_BUGREPORT = hif@ru.is
PACKAGE_NAME = CADIAPlayer
PACKAGE_STRING = CADIAPlayer 3.0
PACKAGE_TARNAME = cadiaplayer
PACKAGE_URL = 
PACKAGE_VERSION = 3.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 3.0
abs_builddir = /home/azhu8/Documents/DM425/cadiaplayer-3.0/agent
abs_srcdir = /home/azhu8/Documents/DM425/cadiaplayer-3.0/agent
abs_top_builddir = /home/azhu8/Documents/DM425/cadiaplayer-3.0
abs_top_srcdir = /home/azhu8/Documents/DM425/cadiaplayer-3.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/azhu8/Documents/DM425/cadiaplayer-3.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/azhu8/Documents/DM425/cadiaplayer-3.0
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#bin_PROGRAMS = cadiaplayer extcadiaplayer uctagent mcmemagent mcagent mastagent tomastagent pastagent fastagent raveagent ravemastagent randomagent ravefastagent mastfastagent ravemastfastagent testplayer testplayer2 analyzer fluxagent ucthagent
GAMECONTROLLER_SOURCES = ../logic/gamecontroller.cpp \
	../logic/gamecontroller.h $(am__append_1) $(am__append_2) \
	$(am__append_3)
SHARED_SOURCES = $(GAMECONTROLLER_SOURCES) \
			gmprotocol.cpp gmprotocol.h \
			agent.cpp agent.h\
			../play/shmemutils/shincupdmap.cpp ../play/shmemutils/shincupdmap.h \
			../play/shmemutils/shkeymap.cpp ../play/shmemutils/shkeymap.h \
			../play/gametheory.cpp ../play/gametheory.h \
			../play/move.cpp ../play/move.h \
			../play/heuristic/heuristic.h \
			../play/players/gameplayer.h \
			../play/parsing/compound.cpp ../play/parsing/compound.h \
			../play/parsing/variable.cpp ../play/parsing/variable.h \
			../play/parsing/symtab.cpp ../play/parsing/symtab.h \
			../play/parsing/gameparser.cpp ../play/parsing/gameparser.h \
			../play/parsing/token.h \
			../play/utils/gamestatespace.cpp ../play/utils/gamestatespace.h \
			../play/utils/multistate.cpp ../play/utils/multistate.h \
			../play/utils/multitree.cpp ../play/utils/multitree.h \
			../play/utils/multistack.cpp ../play/utils/multistack.h \
			../logic/gamecontroller.h \
			../logic/prologutils.h \
			../logic/utils/domainanalyzer.cpp ../logic/utils/domainanalyzer.h \
			../play/utils/binaryrelation.cpp ../play/utils/binaryrelation.h \
			../play/utils/relationcounter.cpp ../play/utils/relationcounter.h \
			../logic/utils/sstate.cpp ../logic/utils/sstate.h \
			../logic/utils/sterm.cpp ../logic/utils/sterm.h \
			../logic/utils/smove.h \
			../logic/utils/smovetable.h \
			../utils/tcpserver.cpp ../utils/tcpserver.h \
			../utils/worker.cpp ../utils/worker.h \
			../utils/longlonghash.h \
			../utils/stringhash.h \
			../utils/statistics.cpp ../utils/statistics.h \
			../utils/logger.cpp ../utils/logger.h \
			../utils/timer.h \
			../utils/streamutils.h \
			../utils/strutils.h \
			../utils/settings.cpp ../utils/settings.h \
			../play/utils/movetrails.cpp ../play/utils/movetrails.h

MC_SHARED = $(SHARED_SOURCES) \
			../play/kits/goalstabilitykit.cpp ../play/kits/goalstabilitykit.h \
			../play/players/selectionplayer.cpp ../play/players/selectionplayer.h \
			../play/players/mcmemoryplayer.cpp ../play/players/mcmemoryplayer.h \
			../play/players/mcplayer.cpp ../play/players/mcplayer.h \
			../play/utils/gt_file.cpp ../play/utils/gt_file.h \
			../play/utils/gt_log.cpp ../play/utils/gt_log.h \
			../play/utils/gtv_data.h

UCT_SHARED = $(MC_SHARED) \
			../play/players/pastplayer.cpp ../play/players/pastplayer.h \
			../play/players/tomastplayer.cpp ../play/players/tomastplayer.h \
			../play/players/mastplayer.cpp ../play/players/mastplayer.h \
			../play/players/uctrolloutplayer.cpp ../play/players/uctrolloutplayer.h \
			../play/players/uctplayer.cpp ../play/players/uctplayer.h

MM_SHARED = ../play/heuristic/heuristic.h \
			../play/heuristic/piececount.cpp ../play/heuristic/piececount.h \
			../play/utils/stateinfo.cpp ../play/utils/stateinfo.h \
			../play/players/minimaxplayer.cpp ../play/players/minimaxplayer.h \
			../play/players/alphabetaplayer.cpp ../play/players/alphabetaplayer.h \
			../play/players/autoheuristicsplayer.cpp ../play/players/autoheuristicsplayer.h

TILING_SHARED = ../play/tiling/tiling.h ../play/tiling/tilings.h \
			../play/tiling/tilecoding.cpp ../play/tiling/tilecoding.h \
			../play/tiling/tilecodinglearner.cpp ../play/tiling/tilecodinglearner.h \
			../play/tiling/valuetiling.cpp ../play/tiling/valuetiling.h \
			../play/tiling/compoundtiling.cpp ../play/tiling/compoundtiling.h \
			../play/tiling/compoundvaluetiling.cpp ../play/tiling/compoundvaluetiling.h \
			../play/tiling/compoundmultivaluetiling.cpp ../play/tiling/compoundmultivaluetiling.h \
			../play/tiling/rolepiecetiling.cpp ../play/tiling/rolepiecetiling.h \
			../play/tiling/piecevaluetiling.cpp ../play/tiling/piecevaluetiling.h \
			../play/kits/tilingplayerkit.cpp ../play/kits/tilingplayerkit.h \
			../play/players/randomplayer.cpp ../play/players/randomplayer.h \
			../play/utils/movepredicatefeature.cpp ../play/utils/movepredicatefeature.h \
			../play/utils/episode.cpp ../play/utils/episode.h


#SHMEM_SHARED =	../play/players/uctimproveshplayer.cpp ../play/players/uctimproveshplayer.h

#CUTOFF_SHARED = ../play/players/cutoffplayer.cpp ../play/players/cutoffplayer.h \
#				../play/players/cutoffmastplayer.cpp ../play/players/cutoffmastplayer.h \
#				../play/players/cutoffmastraveplayer.cpp ../play/players/cutoffmastraveplayer.h \
#				../play/kits/cutoffkit.cpp ../play/kits/cutoffkit.h \
#				../play/players/mccutplayer.cpp ../play/players/mccutplayer.h \
#				../play/kits/goalstabilitykit.cpp ../play/kits/goalstabilitykit.h
RAVE_MAST_FAST_SHARED = ../play/players/pastraveplayer.cpp ../play/players/pastraveplayer.h \
			../play/players/tomastraveplayer.cpp ../play/players/tomastraveplayer.h \
			../play/players/mastraveplayer.cpp ../play/players/mastraveplayer.h \
			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
			../play/players/uctraverolloutplayer.cpp ../play/players/uctraverolloutplayer.h \
			../play/players/fastplayer.cpp ../play/players/fastplayer.h \
			../play/players/fastraveplayer.cpp ../play/players/fastraveplayer.h \
			../play/players/fastmastplayer.cpp ../play/players/fastmastplayer.h \
			../play/players/fastmastraveplayer.cpp ../play/players/fastmastraveplayer.h \
			../play/players/fasttomastplayer.cpp ../play/players/fasttomastplayer.h \
			../play/players/fasttomastraveplayer.cpp ../play/players/fasttomastraveplayer.h \
			../play/players/fastpastplayer.cpp ../play/players/fastpastplayer.h \
			../play/players/fastpastraveplayer.cpp ../play/players/fastpastraveplayer.h


#cadiaplayer_SOURCES = 	cadiaplayer.cpp $(UCT_SHARED) $(RAVE_MAST_FAST_SHARED) $(CUTOFF_SHARED) $(TILING_SHARED)
cadiaplayer_SOURCES = cadiaplayer.cpp $(UCT_SHARED) $(RAVE_MAST_FAST_SHARED) $(TILING_SHARED)

#extcadiaplayer_SOURCES = extcadiaplayer.cpp $(UCT_SHARED) $(RAVE_MAST_FAST_SHARED) $(CUTOFF_SHARED) $(TILING_SHARED)

#			$(SHARED_SOURCES) \
#			../play/players/astarplayer.cpp ../play/players/astarplayer.h \
#			../play/utils/openlist.cpp ../play/utils/openlist.h \
#			../play/heuristic/relaxedheuristic.cpp ../play/heuristic/relaxedheuristic.h \
#			../play/heuristic/heuristic.h

#uctagent_SOURCES = 	uctagent.cpp \
#			$(UCT_SHARED)

#mcmemagent_SOURCES = 	mcmemagent.cpp \
#			$(MC_SHARED)

#mcagent_SOURCES = 	mcagent.cpp \
#			$(MC_SHARED)

#mastagent_SOURCES =		mastagent.cpp \
#			$(UCT_SHARED)

#tomastagent_SOURCES = 	tomastagent.cpp \
#			../play/players/tomastplayer.cpp ../play/players/tomastplayer.h \
#			$(UCT_SHARED)

#pastagent_SOURCES = 	pastagent.cpp \
#			../play/players/pastplayer.cpp ../play/players/pastplayer.h \
#			../play/utils/movepredicatefeature.cpp ../play/utils/movepredicatefeature.h \
#			$(UCT_SHARED)

#fastagent_SOURCES =		fastagent.cpp \
#			../play/players/fastplayer.cpp ../play/players/fastplayer.h \
#			../play/players/ucttilingplayer.cpp ../play/players/ucttilingplayer.h \
#			$(UCT_SHARED) \
#			$(TILING_SHARED)

#raveagent_SOURCES = 	raveagent.cpp \
#			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
#			$(UCT_SHARED)

#ravemastagent_SOURCES = 	ravemastagent.cpp \
#			../play/players/mastraveplayer.cpp ../play/players/mastraveplayer.h \
#			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
#			$(UCT_SHARED)

#randomagent_SOURCES = 	randomagent.cpp \
#			$(SHARED_SOURCES) \
#			../play/players/randomplayer.cpp ../play/players/randomplayer.h
EXTRA_UTILS = ../utils/matrix.h \
			../utils/cholesky.hpp \
			../utils/pcg.hpp \
			../utils/precond.hpp \
			../play/kits/relatedactionkit.cpp ../play/kits/relatedactionkit.h \
			../play/kits/goalestimatorkit.cpp ../play/kits/goalestimatorkit.h \
			../play/utils/goalestimator.h ../play/utils/goalestimator.cpp


#			../play/smab/smabutils.h ../play/smab/smabutils.cpp
EXTRA_PLAYERS = ../play/players/mastraveplayer.cpp ../play/players/mastraveplayer.h \
			../play/players/pastraveplayer.cpp ../play/players/pastraveplayer.h \
			../play/players/tomastraveplayer.cpp ../play/players/tomastraveplayer.h \
			../play/players/ucttilingplayer.cpp ../play/players/ucttilingplayer.h \
			../play/players/comboplayer.cpp ../play/players/comboplayer.h \
			../play/players/mastcomboplayer.cpp ../play/players/mastcomboplayer.h \
			../play/players/pastcomboplayer.cpp ../play/players/pastcomboplayer.h \
			../play/players/tomastcomboplayer.cpp ../play/players/tomastcomboplayer.h \
			../play/players/ravecomboplayer.cpp ../play/players/ravecomboplayer.h \
			../play/players/raveplayer.cpp ../play/players/raveplayer.h \
			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
			../play/players/driftplayer.cpp ../play/players/driftplayer.h \
			../play/players/twoplyplayer.cpp ../play/players/twoplyplayer.h \
			../play/players/backpropplayer.cpp ../play/players/backpropplayer.h \
			../play/players/proximityplayer.cpp ../play/players/proximityplayer.h \
			../play/players/proximitymastplayer.cpp ../play/players/proximitymastplayer.h \
			../play/players/shortcutplayer.cpp ../play/players/shortcutplayer.h \
			../play/players/solverplayer.cpp ../play/players/solverplayer.h \
			../play/players/extuctplayer.cpp ../play/players/extuctplayer.h \
			../play/players/extmastplayer.cpp ../play/players/extmastplayer.h \
			../play/players/extcomboplayer.cpp ../play/players/extcomboplayer.h \
			../play/players/firsturgencyplayer.cpp ../play/players/firsturgencyplayer.h \
			../play/players/goalestimationplayer.cpp ../play/players/goalestimationplayer.h \
			../play/players/relatedactionplayer.cpp ../play/players/relatedactionplayer.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign agent/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign agent/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
cadiaplayer$(EXEEXT): $(cadiaplayer_OBJECTS) $(cadiaplayer_DEPENDENCIES) $(EXTRA_cadiaplayer_DEPENDENCIES) 
	@rm -f cadiaplayer$(EXEEXT)
	$(CXXLINK) $(cadiaplayer_OBJECTS) $(cadiaplayer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/agent.Po
include ./$(DEPDIR)/binaryrelation.Po
include ./$(DEPDIR)/breakthrough.Po
include ./$(DEPDIR)/breakthroughcontroller.Po
include ./$(DEPDIR)/cadiaplayer.Po
include ./$(DEPDIR)/compound.Po
include ./$(DEPDIR)/compoundmultivaluetiling.Po
include ./$(DEPDIR)/compoundtiling.Po
include ./$(DEPDIR)/compoundvaluetiling.Po
include ./$(DEPDIR)/domainanalyzer.Po
include ./$(DEPDIR)/eclipsecontroller.Po
include ./$(DEPDIR)/episode.Po
include ./$(DEPDIR)/fastmastplayer.Po
include ./$(DEPDIR)/fastmastraveplayer.Po
include ./$(DEPDIR)/fastpastplayer.Po
include ./$(DEPDIR)/fastpastraveplayer.Po
include ./$(DEPDIR)/fastplayer.Po
include ./$(DEPDIR)/fastraveplayer.Po
include ./$(DEPDIR)/fasttomastplayer.Po
include ./$(DEPDIR)/fasttomastraveplayer.Po
include ./$(DEPDIR)/gamecontroller.Po
include ./$(DEPDIR)/gameparser.Po
include ./$(DEPDIR)/gamestatespace.Po
include ./$(DEPDIR)/gametheory.Po
include ./$(DEPDIR)/gmprotocol.Po
include ./$(DEPDIR)/goalstabilitykit.Po
include ./$(DEPDIR)/gt_file.Po
include ./$(DEPDIR)/gt_log.Po
include ./$(DEPDIR)/logger.Po
include ./$(DEPDIR)/mastplayer.Po
include ./$(DEPDIR)/mastraveplayer.Po
include ./$(DEPDIR)/mcmemoryplayer.Po
include ./$(DEPDIR)/mcplayer.Po
include ./$(DEPDIR)/move.Po
include ./$(DEPDIR)/movepredicatefeature.Po
include ./$(DEPDIR)/movetrails.Po
include ./$(DEPDIR)/multistack.Po
include ./$(DEPDIR)/multistate.Po
include ./$(DEPDIR)/multitree.Po
include ./$(DEPDIR)/pastplayer.Po
include ./$(DEPDIR)/pastraveplayer.Po
include ./$(DEPDIR)/piecevaluetiling.Po
include ./$(DEPDIR)/prologcontroller.Po
include ./$(DEPDIR)/randomplayer.Po
include ./$(DEPDIR)/relationcounter.Po
include ./$(DEPDIR)/rolepiecetiling.Po
include ./$(DEPDIR)/selectionplayer.Po
include ./$(DEPDIR)/settings.Po
include ./$(DEPDIR)/shincupdmap.Po
include ./$(DEPDIR)/shkeymap.Po
include ./$(DEPDIR)/sstate.Po
include ./$(DEPDIR)/statistics.Po
include ./$(DEPDIR)/sterm.Po
include ./$(DEPDIR)/symtab.Po
include ./$(DEPDIR)/tcpserver.Po
include ./$(DEPDIR)/tilecoding.Po
include ./$(DEPDIR)/tilecodinglearner.Po
include ./$(DEPDIR)/tilingplayerkit.Po
include ./$(DEPDIR)/tomastplayer.Po
include ./$(DEPDIR)/tomastraveplayer.Po
include ./$(DEPDIR)/uctplayer.Po
include ./$(DEPDIR)/uctraveplayer.Po
include ./$(DEPDIR)/uctraverolloutplayer.Po
include ./$(DEPDIR)/uctrolloutplayer.Po
include ./$(DEPDIR)/valuetiling.Po
include ./$(DEPDIR)/variable.Po
include ./$(DEPDIR)/worker.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

gamecontroller.o: ../logic/gamecontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamecontroller.o -MD -MP -MF $(DEPDIR)/gamecontroller.Tpo -c -o gamecontroller.o `test -f '../logic/gamecontroller.cpp' || echo '$(srcdir)/'`../logic/gamecontroller.cpp
	$(am__mv) $(DEPDIR)/gamecontroller.Tpo $(DEPDIR)/gamecontroller.Po
#	source='../logic/gamecontroller.cpp' object='gamecontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamecontroller.o `test -f '../logic/gamecontroller.cpp' || echo '$(srcdir)/'`../logic/gamecontroller.cpp

gamecontroller.obj: ../logic/gamecontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamecontroller.obj -MD -MP -MF $(DEPDIR)/gamecontroller.Tpo -c -o gamecontroller.obj `if test -f '../logic/gamecontroller.cpp'; then $(CYGPATH_W) '../logic/gamecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/gamecontroller.cpp'; fi`
	$(am__mv) $(DEPDIR)/gamecontroller.Tpo $(DEPDIR)/gamecontroller.Po
#	source='../logic/gamecontroller.cpp' object='gamecontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamecontroller.obj `if test -f '../logic/gamecontroller.cpp'; then $(CYGPATH_W) '../logic/gamecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/gamecontroller.cpp'; fi`

eclipsecontroller.o: ../logic/eclipsecontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eclipsecontroller.o -MD -MP -MF $(DEPDIR)/eclipsecontroller.Tpo -c -o eclipsecontroller.o `test -f '../logic/eclipsecontroller.cpp' || echo '$(srcdir)/'`../logic/eclipsecontroller.cpp
	$(am__mv) $(DEPDIR)/eclipsecontroller.Tpo $(DEPDIR)/eclipsecontroller.Po
#	source='../logic/eclipsecontroller.cpp' object='eclipsecontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eclipsecontroller.o `test -f '../logic/eclipsecontroller.cpp' || echo '$(srcdir)/'`../logic/eclipsecontroller.cpp

eclipsecontroller.obj: ../logic/eclipsecontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eclipsecontroller.obj -MD -MP -MF $(DEPDIR)/eclipsecontroller.Tpo -c -o eclipsecontroller.obj `if test -f '../logic/eclipsecontroller.cpp'; then $(CYGPATH_W) '../logic/eclipsecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/eclipsecontroller.cpp'; fi`
	$(am__mv) $(DEPDIR)/eclipsecontroller.Tpo $(DEPDIR)/eclipsecontroller.Po
#	source='../logic/eclipsecontroller.cpp' object='eclipsecontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eclipsecontroller.obj `if test -f '../logic/eclipsecontroller.cpp'; then $(CYGPATH_W) '../logic/eclipsecontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/eclipsecontroller.cpp'; fi`

prologcontroller.o: ../logic/prologcontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prologcontroller.o -MD -MP -MF $(DEPDIR)/prologcontroller.Tpo -c -o prologcontroller.o `test -f '../logic/prologcontroller.cpp' || echo '$(srcdir)/'`../logic/prologcontroller.cpp
	$(am__mv) $(DEPDIR)/prologcontroller.Tpo $(DEPDIR)/prologcontroller.Po
#	source='../logic/prologcontroller.cpp' object='prologcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prologcontroller.o `test -f '../logic/prologcontroller.cpp' || echo '$(srcdir)/'`../logic/prologcontroller.cpp

prologcontroller.obj: ../logic/prologcontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT prologcontroller.obj -MD -MP -MF $(DEPDIR)/prologcontroller.Tpo -c -o prologcontroller.obj `if test -f '../logic/prologcontroller.cpp'; then $(CYGPATH_W) '../logic/prologcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/prologcontroller.cpp'; fi`
	$(am__mv) $(DEPDIR)/prologcontroller.Tpo $(DEPDIR)/prologcontroller.Po
#	source='../logic/prologcontroller.cpp' object='prologcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o prologcontroller.obj `if test -f '../logic/prologcontroller.cpp'; then $(CYGPATH_W) '../logic/prologcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/prologcontroller.cpp'; fi`

breakthroughcontroller.o: ../logic/breakthroughcontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT breakthroughcontroller.o -MD -MP -MF $(DEPDIR)/breakthroughcontroller.Tpo -c -o breakthroughcontroller.o `test -f '../logic/breakthroughcontroller.cpp' || echo '$(srcdir)/'`../logic/breakthroughcontroller.cpp
	$(am__mv) $(DEPDIR)/breakthroughcontroller.Tpo $(DEPDIR)/breakthroughcontroller.Po
#	source='../logic/breakthroughcontroller.cpp' object='breakthroughcontroller.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o breakthroughcontroller.o `test -f '../logic/breakthroughcontroller.cpp' || echo '$(srcdir)/'`../logic/breakthroughcontroller.cpp

breakthroughcontroller.obj: ../logic/breakthroughcontroller.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT breakthroughcontroller.obj -MD -MP -MF $(DEPDIR)/breakthroughcontroller.Tpo -c -o breakthroughcontroller.obj `if test -f '../logic/breakthroughcontroller.cpp'; then $(CYGPATH_W) '../logic/breakthroughcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/breakthroughcontroller.cpp'; fi`
	$(am__mv) $(DEPDIR)/breakthroughcontroller.Tpo $(DEPDIR)/breakthroughcontroller.Po
#	source='../logic/breakthroughcontroller.cpp' object='breakthroughcontroller.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o breakthroughcontroller.obj `if test -f '../logic/breakthroughcontroller.cpp'; then $(CYGPATH_W) '../logic/breakthroughcontroller.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/breakthroughcontroller.cpp'; fi`

breakthrough.o: ../logic/games/breakthrough.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT breakthrough.o -MD -MP -MF $(DEPDIR)/breakthrough.Tpo -c -o breakthrough.o `test -f '../logic/games/breakthrough.cpp' || echo '$(srcdir)/'`../logic/games/breakthrough.cpp
	$(am__mv) $(DEPDIR)/breakthrough.Tpo $(DEPDIR)/breakthrough.Po
#	source='../logic/games/breakthrough.cpp' object='breakthrough.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o breakthrough.o `test -f '../logic/games/breakthrough.cpp' || echo '$(srcdir)/'`../logic/games/breakthrough.cpp

breakthrough.obj: ../logic/games/breakthrough.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT breakthrough.obj -MD -MP -MF $(DEPDIR)/breakthrough.Tpo -c -o breakthrough.obj `if test -f '../logic/games/breakthrough.cpp'; then $(CYGPATH_W) '../logic/games/breakthrough.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/games/breakthrough.cpp'; fi`
	$(am__mv) $(DEPDIR)/breakthrough.Tpo $(DEPDIR)/breakthrough.Po
#	source='../logic/games/breakthrough.cpp' object='breakthrough.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o breakthrough.obj `if test -f '../logic/games/breakthrough.cpp'; then $(CYGPATH_W) '../logic/games/breakthrough.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/games/breakthrough.cpp'; fi`

shincupdmap.o: ../play/shmemutils/shincupdmap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shincupdmap.o -MD -MP -MF $(DEPDIR)/shincupdmap.Tpo -c -o shincupdmap.o `test -f '../play/shmemutils/shincupdmap.cpp' || echo '$(srcdir)/'`../play/shmemutils/shincupdmap.cpp
	$(am__mv) $(DEPDIR)/shincupdmap.Tpo $(DEPDIR)/shincupdmap.Po
#	source='../play/shmemutils/shincupdmap.cpp' object='shincupdmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shincupdmap.o `test -f '../play/shmemutils/shincupdmap.cpp' || echo '$(srcdir)/'`../play/shmemutils/shincupdmap.cpp

shincupdmap.obj: ../play/shmemutils/shincupdmap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shincupdmap.obj -MD -MP -MF $(DEPDIR)/shincupdmap.Tpo -c -o shincupdmap.obj `if test -f '../play/shmemutils/shincupdmap.cpp'; then $(CYGPATH_W) '../play/shmemutils/shincupdmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/shmemutils/shincupdmap.cpp'; fi`
	$(am__mv) $(DEPDIR)/shincupdmap.Tpo $(DEPDIR)/shincupdmap.Po
#	source='../play/shmemutils/shincupdmap.cpp' object='shincupdmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shincupdmap.obj `if test -f '../play/shmemutils/shincupdmap.cpp'; then $(CYGPATH_W) '../play/shmemutils/shincupdmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/shmemutils/shincupdmap.cpp'; fi`

shkeymap.o: ../play/shmemutils/shkeymap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shkeymap.o -MD -MP -MF $(DEPDIR)/shkeymap.Tpo -c -o shkeymap.o `test -f '../play/shmemutils/shkeymap.cpp' || echo '$(srcdir)/'`../play/shmemutils/shkeymap.cpp
	$(am__mv) $(DEPDIR)/shkeymap.Tpo $(DEPDIR)/shkeymap.Po
#	source='../play/shmemutils/shkeymap.cpp' object='shkeymap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shkeymap.o `test -f '../play/shmemutils/shkeymap.cpp' || echo '$(srcdir)/'`../play/shmemutils/shkeymap.cpp

shkeymap.obj: ../play/shmemutils/shkeymap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shkeymap.obj -MD -MP -MF $(DEPDIR)/shkeymap.Tpo -c -o shkeymap.obj `if test -f '../play/shmemutils/shkeymap.cpp'; then $(CYGPATH_W) '../play/shmemutils/shkeymap.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/shmemutils/shkeymap.cpp'; fi`
	$(am__mv) $(DEPDIR)/shkeymap.Tpo $(DEPDIR)/shkeymap.Po
#	source='../play/shmemutils/shkeymap.cpp' object='shkeymap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shkeymap.obj `if test -f '../play/shmemutils/shkeymap.cpp'; then $(CYGPATH_W) '../play/shmemutils/shkeymap.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/shmemutils/shkeymap.cpp'; fi`

gametheory.o: ../play/gametheory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gametheory.o -MD -MP -MF $(DEPDIR)/gametheory.Tpo -c -o gametheory.o `test -f '../play/gametheory.cpp' || echo '$(srcdir)/'`../play/gametheory.cpp
	$(am__mv) $(DEPDIR)/gametheory.Tpo $(DEPDIR)/gametheory.Po
#	source='../play/gametheory.cpp' object='gametheory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gametheory.o `test -f '../play/gametheory.cpp' || echo '$(srcdir)/'`../play/gametheory.cpp

gametheory.obj: ../play/gametheory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gametheory.obj -MD -MP -MF $(DEPDIR)/gametheory.Tpo -c -o gametheory.obj `if test -f '../play/gametheory.cpp'; then $(CYGPATH_W) '../play/gametheory.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/gametheory.cpp'; fi`
	$(am__mv) $(DEPDIR)/gametheory.Tpo $(DEPDIR)/gametheory.Po
#	source='../play/gametheory.cpp' object='gametheory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gametheory.obj `if test -f '../play/gametheory.cpp'; then $(CYGPATH_W) '../play/gametheory.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/gametheory.cpp'; fi`

move.o: ../play/move.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT move.o -MD -MP -MF $(DEPDIR)/move.Tpo -c -o move.o `test -f '../play/move.cpp' || echo '$(srcdir)/'`../play/move.cpp
	$(am__mv) $(DEPDIR)/move.Tpo $(DEPDIR)/move.Po
#	source='../play/move.cpp' object='move.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o move.o `test -f '../play/move.cpp' || echo '$(srcdir)/'`../play/move.cpp

move.obj: ../play/move.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT move.obj -MD -MP -MF $(DEPDIR)/move.Tpo -c -o move.obj `if test -f '../play/move.cpp'; then $(CYGPATH_W) '../play/move.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/move.cpp'; fi`
	$(am__mv) $(DEPDIR)/move.Tpo $(DEPDIR)/move.Po
#	source='../play/move.cpp' object='move.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o move.obj `if test -f '../play/move.cpp'; then $(CYGPATH_W) '../play/move.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/move.cpp'; fi`

compound.o: ../play/parsing/compound.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compound.o -MD -MP -MF $(DEPDIR)/compound.Tpo -c -o compound.o `test -f '../play/parsing/compound.cpp' || echo '$(srcdir)/'`../play/parsing/compound.cpp
	$(am__mv) $(DEPDIR)/compound.Tpo $(DEPDIR)/compound.Po
#	source='../play/parsing/compound.cpp' object='compound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compound.o `test -f '../play/parsing/compound.cpp' || echo '$(srcdir)/'`../play/parsing/compound.cpp

compound.obj: ../play/parsing/compound.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compound.obj -MD -MP -MF $(DEPDIR)/compound.Tpo -c -o compound.obj `if test -f '../play/parsing/compound.cpp'; then $(CYGPATH_W) '../play/parsing/compound.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/compound.cpp'; fi`
	$(am__mv) $(DEPDIR)/compound.Tpo $(DEPDIR)/compound.Po
#	source='../play/parsing/compound.cpp' object='compound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compound.obj `if test -f '../play/parsing/compound.cpp'; then $(CYGPATH_W) '../play/parsing/compound.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/compound.cpp'; fi`

variable.o: ../play/parsing/variable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT variable.o -MD -MP -MF $(DEPDIR)/variable.Tpo -c -o variable.o `test -f '../play/parsing/variable.cpp' || echo '$(srcdir)/'`../play/parsing/variable.cpp
	$(am__mv) $(DEPDIR)/variable.Tpo $(DEPDIR)/variable.Po
#	source='../play/parsing/variable.cpp' object='variable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o variable.o `test -f '../play/parsing/variable.cpp' || echo '$(srcdir)/'`../play/parsing/variable.cpp

variable.obj: ../play/parsing/variable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT variable.obj -MD -MP -MF $(DEPDIR)/variable.Tpo -c -o variable.obj `if test -f '../play/parsing/variable.cpp'; then $(CYGPATH_W) '../play/parsing/variable.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/variable.cpp'; fi`
	$(am__mv) $(DEPDIR)/variable.Tpo $(DEPDIR)/variable.Po
#	source='../play/parsing/variable.cpp' object='variable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o variable.obj `if test -f '../play/parsing/variable.cpp'; then $(CYGPATH_W) '../play/parsing/variable.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/variable.cpp'; fi`

symtab.o: ../play/parsing/symtab.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT symtab.o -MD -MP -MF $(DEPDIR)/symtab.Tpo -c -o symtab.o `test -f '../play/parsing/symtab.cpp' || echo '$(srcdir)/'`../play/parsing/symtab.cpp
	$(am__mv) $(DEPDIR)/symtab.Tpo $(DEPDIR)/symtab.Po
#	source='../play/parsing/symtab.cpp' object='symtab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o symtab.o `test -f '../play/parsing/symtab.cpp' || echo '$(srcdir)/'`../play/parsing/symtab.cpp

symtab.obj: ../play/parsing/symtab.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT symtab.obj -MD -MP -MF $(DEPDIR)/symtab.Tpo -c -o symtab.obj `if test -f '../play/parsing/symtab.cpp'; then $(CYGPATH_W) '../play/parsing/symtab.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/symtab.cpp'; fi`
	$(am__mv) $(DEPDIR)/symtab.Tpo $(DEPDIR)/symtab.Po
#	source='../play/parsing/symtab.cpp' object='symtab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o symtab.obj `if test -f '../play/parsing/symtab.cpp'; then $(CYGPATH_W) '../play/parsing/symtab.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/symtab.cpp'; fi`

gameparser.o: ../play/parsing/gameparser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameparser.o -MD -MP -MF $(DEPDIR)/gameparser.Tpo -c -o gameparser.o `test -f '../play/parsing/gameparser.cpp' || echo '$(srcdir)/'`../play/parsing/gameparser.cpp
	$(am__mv) $(DEPDIR)/gameparser.Tpo $(DEPDIR)/gameparser.Po
#	source='../play/parsing/gameparser.cpp' object='gameparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameparser.o `test -f '../play/parsing/gameparser.cpp' || echo '$(srcdir)/'`../play/parsing/gameparser.cpp

gameparser.obj: ../play/parsing/gameparser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gameparser.obj -MD -MP -MF $(DEPDIR)/gameparser.Tpo -c -o gameparser.obj `if test -f '../play/parsing/gameparser.cpp'; then $(CYGPATH_W) '../play/parsing/gameparser.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/gameparser.cpp'; fi`
	$(am__mv) $(DEPDIR)/gameparser.Tpo $(DEPDIR)/gameparser.Po
#	source='../play/parsing/gameparser.cpp' object='gameparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gameparser.obj `if test -f '../play/parsing/gameparser.cpp'; then $(CYGPATH_W) '../play/parsing/gameparser.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/parsing/gameparser.cpp'; fi`

gamestatespace.o: ../play/utils/gamestatespace.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamestatespace.o -MD -MP -MF $(DEPDIR)/gamestatespace.Tpo -c -o gamestatespace.o `test -f '../play/utils/gamestatespace.cpp' || echo '$(srcdir)/'`../play/utils/gamestatespace.cpp
	$(am__mv) $(DEPDIR)/gamestatespace.Tpo $(DEPDIR)/gamestatespace.Po
#	source='../play/utils/gamestatespace.cpp' object='gamestatespace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamestatespace.o `test -f '../play/utils/gamestatespace.cpp' || echo '$(srcdir)/'`../play/utils/gamestatespace.cpp

gamestatespace.obj: ../play/utils/gamestatespace.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gamestatespace.obj -MD -MP -MF $(DEPDIR)/gamestatespace.Tpo -c -o gamestatespace.obj `if test -f '../play/utils/gamestatespace.cpp'; then $(CYGPATH_W) '../play/utils/gamestatespace.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gamestatespace.cpp'; fi`
	$(am__mv) $(DEPDIR)/gamestatespace.Tpo $(DEPDIR)/gamestatespace.Po
#	source='../play/utils/gamestatespace.cpp' object='gamestatespace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gamestatespace.obj `if test -f '../play/utils/gamestatespace.cpp'; then $(CYGPATH_W) '../play/utils/gamestatespace.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gamestatespace.cpp'; fi`

multistate.o: ../play/utils/multistate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multistate.o -MD -MP -MF $(DEPDIR)/multistate.Tpo -c -o multistate.o `test -f '../play/utils/multistate.cpp' || echo '$(srcdir)/'`../play/utils/multistate.cpp
	$(am__mv) $(DEPDIR)/multistate.Tpo $(DEPDIR)/multistate.Po
#	source='../play/utils/multistate.cpp' object='multistate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multistate.o `test -f '../play/utils/multistate.cpp' || echo '$(srcdir)/'`../play/utils/multistate.cpp

multistate.obj: ../play/utils/multistate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multistate.obj -MD -MP -MF $(DEPDIR)/multistate.Tpo -c -o multistate.obj `if test -f '../play/utils/multistate.cpp'; then $(CYGPATH_W) '../play/utils/multistate.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multistate.cpp'; fi`
	$(am__mv) $(DEPDIR)/multistate.Tpo $(DEPDIR)/multistate.Po
#	source='../play/utils/multistate.cpp' object='multistate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multistate.obj `if test -f '../play/utils/multistate.cpp'; then $(CYGPATH_W) '../play/utils/multistate.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multistate.cpp'; fi`

multitree.o: ../play/utils/multitree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multitree.o -MD -MP -MF $(DEPDIR)/multitree.Tpo -c -o multitree.o `test -f '../play/utils/multitree.cpp' || echo '$(srcdir)/'`../play/utils/multitree.cpp
	$(am__mv) $(DEPDIR)/multitree.Tpo $(DEPDIR)/multitree.Po
#	source='../play/utils/multitree.cpp' object='multitree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multitree.o `test -f '../play/utils/multitree.cpp' || echo '$(srcdir)/'`../play/utils/multitree.cpp

multitree.obj: ../play/utils/multitree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multitree.obj -MD -MP -MF $(DEPDIR)/multitree.Tpo -c -o multitree.obj `if test -f '../play/utils/multitree.cpp'; then $(CYGPATH_W) '../play/utils/multitree.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multitree.cpp'; fi`
	$(am__mv) $(DEPDIR)/multitree.Tpo $(DEPDIR)/multitree.Po
#	source='../play/utils/multitree.cpp' object='multitree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multitree.obj `if test -f '../play/utils/multitree.cpp'; then $(CYGPATH_W) '../play/utils/multitree.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multitree.cpp'; fi`

multistack.o: ../play/utils/multistack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multistack.o -MD -MP -MF $(DEPDIR)/multistack.Tpo -c -o multistack.o `test -f '../play/utils/multistack.cpp' || echo '$(srcdir)/'`../play/utils/multistack.cpp
	$(am__mv) $(DEPDIR)/multistack.Tpo $(DEPDIR)/multistack.Po
#	source='../play/utils/multistack.cpp' object='multistack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multistack.o `test -f '../play/utils/multistack.cpp' || echo '$(srcdir)/'`../play/utils/multistack.cpp

multistack.obj: ../play/utils/multistack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multistack.obj -MD -MP -MF $(DEPDIR)/multistack.Tpo -c -o multistack.obj `if test -f '../play/utils/multistack.cpp'; then $(CYGPATH_W) '../play/utils/multistack.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multistack.cpp'; fi`
	$(am__mv) $(DEPDIR)/multistack.Tpo $(DEPDIR)/multistack.Po
#	source='../play/utils/multistack.cpp' object='multistack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multistack.obj `if test -f '../play/utils/multistack.cpp'; then $(CYGPATH_W) '../play/utils/multistack.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/multistack.cpp'; fi`

domainanalyzer.o: ../logic/utils/domainanalyzer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT domainanalyzer.o -MD -MP -MF $(DEPDIR)/domainanalyzer.Tpo -c -o domainanalyzer.o `test -f '../logic/utils/domainanalyzer.cpp' || echo '$(srcdir)/'`../logic/utils/domainanalyzer.cpp
	$(am__mv) $(DEPDIR)/domainanalyzer.Tpo $(DEPDIR)/domainanalyzer.Po
#	source='../logic/utils/domainanalyzer.cpp' object='domainanalyzer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o domainanalyzer.o `test -f '../logic/utils/domainanalyzer.cpp' || echo '$(srcdir)/'`../logic/utils/domainanalyzer.cpp

domainanalyzer.obj: ../logic/utils/domainanalyzer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT domainanalyzer.obj -MD -MP -MF $(DEPDIR)/domainanalyzer.Tpo -c -o domainanalyzer.obj `if test -f '../logic/utils/domainanalyzer.cpp'; then $(CYGPATH_W) '../logic/utils/domainanalyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/domainanalyzer.cpp'; fi`
	$(am__mv) $(DEPDIR)/domainanalyzer.Tpo $(DEPDIR)/domainanalyzer.Po
#	source='../logic/utils/domainanalyzer.cpp' object='domainanalyzer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o domainanalyzer.obj `if test -f '../logic/utils/domainanalyzer.cpp'; then $(CYGPATH_W) '../logic/utils/domainanalyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/domainanalyzer.cpp'; fi`

binaryrelation.o: ../play/utils/binaryrelation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT binaryrelation.o -MD -MP -MF $(DEPDIR)/binaryrelation.Tpo -c -o binaryrelation.o `test -f '../play/utils/binaryrelation.cpp' || echo '$(srcdir)/'`../play/utils/binaryrelation.cpp
	$(am__mv) $(DEPDIR)/binaryrelation.Tpo $(DEPDIR)/binaryrelation.Po
#	source='../play/utils/binaryrelation.cpp' object='binaryrelation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o binaryrelation.o `test -f '../play/utils/binaryrelation.cpp' || echo '$(srcdir)/'`../play/utils/binaryrelation.cpp

binaryrelation.obj: ../play/utils/binaryrelation.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT binaryrelation.obj -MD -MP -MF $(DEPDIR)/binaryrelation.Tpo -c -o binaryrelation.obj `if test -f '../play/utils/binaryrelation.cpp'; then $(CYGPATH_W) '../play/utils/binaryrelation.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/binaryrelation.cpp'; fi`
	$(am__mv) $(DEPDIR)/binaryrelation.Tpo $(DEPDIR)/binaryrelation.Po
#	source='../play/utils/binaryrelation.cpp' object='binaryrelation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o binaryrelation.obj `if test -f '../play/utils/binaryrelation.cpp'; then $(CYGPATH_W) '../play/utils/binaryrelation.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/binaryrelation.cpp'; fi`

relationcounter.o: ../play/utils/relationcounter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT relationcounter.o -MD -MP -MF $(DEPDIR)/relationcounter.Tpo -c -o relationcounter.o `test -f '../play/utils/relationcounter.cpp' || echo '$(srcdir)/'`../play/utils/relationcounter.cpp
	$(am__mv) $(DEPDIR)/relationcounter.Tpo $(DEPDIR)/relationcounter.Po
#	source='../play/utils/relationcounter.cpp' object='relationcounter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o relationcounter.o `test -f '../play/utils/relationcounter.cpp' || echo '$(srcdir)/'`../play/utils/relationcounter.cpp

relationcounter.obj: ../play/utils/relationcounter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT relationcounter.obj -MD -MP -MF $(DEPDIR)/relationcounter.Tpo -c -o relationcounter.obj `if test -f '../play/utils/relationcounter.cpp'; then $(CYGPATH_W) '../play/utils/relationcounter.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/relationcounter.cpp'; fi`
	$(am__mv) $(DEPDIR)/relationcounter.Tpo $(DEPDIR)/relationcounter.Po
#	source='../play/utils/relationcounter.cpp' object='relationcounter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o relationcounter.obj `if test -f '../play/utils/relationcounter.cpp'; then $(CYGPATH_W) '../play/utils/relationcounter.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/relationcounter.cpp'; fi`

sstate.o: ../logic/utils/sstate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sstate.o -MD -MP -MF $(DEPDIR)/sstate.Tpo -c -o sstate.o `test -f '../logic/utils/sstate.cpp' || echo '$(srcdir)/'`../logic/utils/sstate.cpp
	$(am__mv) $(DEPDIR)/sstate.Tpo $(DEPDIR)/sstate.Po
#	source='../logic/utils/sstate.cpp' object='sstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sstate.o `test -f '../logic/utils/sstate.cpp' || echo '$(srcdir)/'`../logic/utils/sstate.cpp

sstate.obj: ../logic/utils/sstate.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sstate.obj -MD -MP -MF $(DEPDIR)/sstate.Tpo -c -o sstate.obj `if test -f '../logic/utils/sstate.cpp'; then $(CYGPATH_W) '../logic/utils/sstate.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/sstate.cpp'; fi`
	$(am__mv) $(DEPDIR)/sstate.Tpo $(DEPDIR)/sstate.Po
#	source='../logic/utils/sstate.cpp' object='sstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sstate.obj `if test -f '../logic/utils/sstate.cpp'; then $(CYGPATH_W) '../logic/utils/sstate.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/sstate.cpp'; fi`

sterm.o: ../logic/utils/sterm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sterm.o -MD -MP -MF $(DEPDIR)/sterm.Tpo -c -o sterm.o `test -f '../logic/utils/sterm.cpp' || echo '$(srcdir)/'`../logic/utils/sterm.cpp
	$(am__mv) $(DEPDIR)/sterm.Tpo $(DEPDIR)/sterm.Po
#	source='../logic/utils/sterm.cpp' object='sterm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sterm.o `test -f '../logic/utils/sterm.cpp' || echo '$(srcdir)/'`../logic/utils/sterm.cpp

sterm.obj: ../logic/utils/sterm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sterm.obj -MD -MP -MF $(DEPDIR)/sterm.Tpo -c -o sterm.obj `if test -f '../logic/utils/sterm.cpp'; then $(CYGPATH_W) '../logic/utils/sterm.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/sterm.cpp'; fi`
	$(am__mv) $(DEPDIR)/sterm.Tpo $(DEPDIR)/sterm.Po
#	source='../logic/utils/sterm.cpp' object='sterm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sterm.obj `if test -f '../logic/utils/sterm.cpp'; then $(CYGPATH_W) '../logic/utils/sterm.cpp'; else $(CYGPATH_W) '$(srcdir)/../logic/utils/sterm.cpp'; fi`

tcpserver.o: ../utils/tcpserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tcpserver.o -MD -MP -MF $(DEPDIR)/tcpserver.Tpo -c -o tcpserver.o `test -f '../utils/tcpserver.cpp' || echo '$(srcdir)/'`../utils/tcpserver.cpp
	$(am__mv) $(DEPDIR)/tcpserver.Tpo $(DEPDIR)/tcpserver.Po
#	source='../utils/tcpserver.cpp' object='tcpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tcpserver.o `test -f '../utils/tcpserver.cpp' || echo '$(srcdir)/'`../utils/tcpserver.cpp

tcpserver.obj: ../utils/tcpserver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tcpserver.obj -MD -MP -MF $(DEPDIR)/tcpserver.Tpo -c -o tcpserver.obj `if test -f '../utils/tcpserver.cpp'; then $(CYGPATH_W) '../utils/tcpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/tcpserver.cpp'; fi`
	$(am__mv) $(DEPDIR)/tcpserver.Tpo $(DEPDIR)/tcpserver.Po
#	source='../utils/tcpserver.cpp' object='tcpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tcpserver.obj `if test -f '../utils/tcpserver.cpp'; then $(CYGPATH_W) '../utils/tcpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/tcpserver.cpp'; fi`

worker.o: ../utils/worker.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT worker.o -MD -MP -MF $(DEPDIR)/worker.Tpo -c -o worker.o `test -f '../utils/worker.cpp' || echo '$(srcdir)/'`../utils/worker.cpp
	$(am__mv) $(DEPDIR)/worker.Tpo $(DEPDIR)/worker.Po
#	source='../utils/worker.cpp' object='worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o worker.o `test -f '../utils/worker.cpp' || echo '$(srcdir)/'`../utils/worker.cpp

worker.obj: ../utils/worker.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT worker.obj -MD -MP -MF $(DEPDIR)/worker.Tpo -c -o worker.obj `if test -f '../utils/worker.cpp'; then $(CYGPATH_W) '../utils/worker.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/worker.cpp'; fi`
	$(am__mv) $(DEPDIR)/worker.Tpo $(DEPDIR)/worker.Po
#	source='../utils/worker.cpp' object='worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o worker.obj `if test -f '../utils/worker.cpp'; then $(CYGPATH_W) '../utils/worker.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/worker.cpp'; fi`

statistics.o: ../utils/statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT statistics.o -MD -MP -MF $(DEPDIR)/statistics.Tpo -c -o statistics.o `test -f '../utils/statistics.cpp' || echo '$(srcdir)/'`../utils/statistics.cpp
	$(am__mv) $(DEPDIR)/statistics.Tpo $(DEPDIR)/statistics.Po
#	source='../utils/statistics.cpp' object='statistics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o statistics.o `test -f '../utils/statistics.cpp' || echo '$(srcdir)/'`../utils/statistics.cpp

statistics.obj: ../utils/statistics.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT statistics.obj -MD -MP -MF $(DEPDIR)/statistics.Tpo -c -o statistics.obj `if test -f '../utils/statistics.cpp'; then $(CYGPATH_W) '../utils/statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/statistics.cpp'; fi`
	$(am__mv) $(DEPDIR)/statistics.Tpo $(DEPDIR)/statistics.Po
#	source='../utils/statistics.cpp' object='statistics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o statistics.obj `if test -f '../utils/statistics.cpp'; then $(CYGPATH_W) '../utils/statistics.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/statistics.cpp'; fi`

logger.o: ../utils/logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logger.o -MD -MP -MF $(DEPDIR)/logger.Tpo -c -o logger.o `test -f '../utils/logger.cpp' || echo '$(srcdir)/'`../utils/logger.cpp
	$(am__mv) $(DEPDIR)/logger.Tpo $(DEPDIR)/logger.Po
#	source='../utils/logger.cpp' object='logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logger.o `test -f '../utils/logger.cpp' || echo '$(srcdir)/'`../utils/logger.cpp

logger.obj: ../utils/logger.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT logger.obj -MD -MP -MF $(DEPDIR)/logger.Tpo -c -o logger.obj `if test -f '../utils/logger.cpp'; then $(CYGPATH_W) '../utils/logger.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/logger.cpp'; fi`
	$(am__mv) $(DEPDIR)/logger.Tpo $(DEPDIR)/logger.Po
#	source='../utils/logger.cpp' object='logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o logger.obj `if test -f '../utils/logger.cpp'; then $(CYGPATH_W) '../utils/logger.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/logger.cpp'; fi`

settings.o: ../utils/settings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT settings.o -MD -MP -MF $(DEPDIR)/settings.Tpo -c -o settings.o `test -f '../utils/settings.cpp' || echo '$(srcdir)/'`../utils/settings.cpp
	$(am__mv) $(DEPDIR)/settings.Tpo $(DEPDIR)/settings.Po
#	source='../utils/settings.cpp' object='settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o settings.o `test -f '../utils/settings.cpp' || echo '$(srcdir)/'`../utils/settings.cpp

settings.obj: ../utils/settings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT settings.obj -MD -MP -MF $(DEPDIR)/settings.Tpo -c -o settings.obj `if test -f '../utils/settings.cpp'; then $(CYGPATH_W) '../utils/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/settings.cpp'; fi`
	$(am__mv) $(DEPDIR)/settings.Tpo $(DEPDIR)/settings.Po
#	source='../utils/settings.cpp' object='settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o settings.obj `if test -f '../utils/settings.cpp'; then $(CYGPATH_W) '../utils/settings.cpp'; else $(CYGPATH_W) '$(srcdir)/../utils/settings.cpp'; fi`

movetrails.o: ../play/utils/movetrails.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movetrails.o -MD -MP -MF $(DEPDIR)/movetrails.Tpo -c -o movetrails.o `test -f '../play/utils/movetrails.cpp' || echo '$(srcdir)/'`../play/utils/movetrails.cpp
	$(am__mv) $(DEPDIR)/movetrails.Tpo $(DEPDIR)/movetrails.Po
#	source='../play/utils/movetrails.cpp' object='movetrails.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movetrails.o `test -f '../play/utils/movetrails.cpp' || echo '$(srcdir)/'`../play/utils/movetrails.cpp

movetrails.obj: ../play/utils/movetrails.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movetrails.obj -MD -MP -MF $(DEPDIR)/movetrails.Tpo -c -o movetrails.obj `if test -f '../play/utils/movetrails.cpp'; then $(CYGPATH_W) '../play/utils/movetrails.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/movetrails.cpp'; fi`
	$(am__mv) $(DEPDIR)/movetrails.Tpo $(DEPDIR)/movetrails.Po
#	source='../play/utils/movetrails.cpp' object='movetrails.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movetrails.obj `if test -f '../play/utils/movetrails.cpp'; then $(CYGPATH_W) '../play/utils/movetrails.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/movetrails.cpp'; fi`

goalstabilitykit.o: ../play/kits/goalstabilitykit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT goalstabilitykit.o -MD -MP -MF $(DEPDIR)/goalstabilitykit.Tpo -c -o goalstabilitykit.o `test -f '../play/kits/goalstabilitykit.cpp' || echo '$(srcdir)/'`../play/kits/goalstabilitykit.cpp
	$(am__mv) $(DEPDIR)/goalstabilitykit.Tpo $(DEPDIR)/goalstabilitykit.Po
#	source='../play/kits/goalstabilitykit.cpp' object='goalstabilitykit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o goalstabilitykit.o `test -f '../play/kits/goalstabilitykit.cpp' || echo '$(srcdir)/'`../play/kits/goalstabilitykit.cpp

goalstabilitykit.obj: ../play/kits/goalstabilitykit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT goalstabilitykit.obj -MD -MP -MF $(DEPDIR)/goalstabilitykit.Tpo -c -o goalstabilitykit.obj `if test -f '../play/kits/goalstabilitykit.cpp'; then $(CYGPATH_W) '../play/kits/goalstabilitykit.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/kits/goalstabilitykit.cpp'; fi`
	$(am__mv) $(DEPDIR)/goalstabilitykit.Tpo $(DEPDIR)/goalstabilitykit.Po
#	source='../play/kits/goalstabilitykit.cpp' object='goalstabilitykit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o goalstabilitykit.obj `if test -f '../play/kits/goalstabilitykit.cpp'; then $(CYGPATH_W) '../play/kits/goalstabilitykit.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/kits/goalstabilitykit.cpp'; fi`

selectionplayer.o: ../play/players/selectionplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT selectionplayer.o -MD -MP -MF $(DEPDIR)/selectionplayer.Tpo -c -o selectionplayer.o `test -f '../play/players/selectionplayer.cpp' || echo '$(srcdir)/'`../play/players/selectionplayer.cpp
	$(am__mv) $(DEPDIR)/selectionplayer.Tpo $(DEPDIR)/selectionplayer.Po
#	source='../play/players/selectionplayer.cpp' object='selectionplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o selectionplayer.o `test -f '../play/players/selectionplayer.cpp' || echo '$(srcdir)/'`../play/players/selectionplayer.cpp

selectionplayer.obj: ../play/players/selectionplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT selectionplayer.obj -MD -MP -MF $(DEPDIR)/selectionplayer.Tpo -c -o selectionplayer.obj `if test -f '../play/players/selectionplayer.cpp'; then $(CYGPATH_W) '../play/players/selectionplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/selectionplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/selectionplayer.Tpo $(DEPDIR)/selectionplayer.Po
#	source='../play/players/selectionplayer.cpp' object='selectionplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o selectionplayer.obj `if test -f '../play/players/selectionplayer.cpp'; then $(CYGPATH_W) '../play/players/selectionplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/selectionplayer.cpp'; fi`

mcmemoryplayer.o: ../play/players/mcmemoryplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcmemoryplayer.o -MD -MP -MF $(DEPDIR)/mcmemoryplayer.Tpo -c -o mcmemoryplayer.o `test -f '../play/players/mcmemoryplayer.cpp' || echo '$(srcdir)/'`../play/players/mcmemoryplayer.cpp
	$(am__mv) $(DEPDIR)/mcmemoryplayer.Tpo $(DEPDIR)/mcmemoryplayer.Po
#	source='../play/players/mcmemoryplayer.cpp' object='mcmemoryplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcmemoryplayer.o `test -f '../play/players/mcmemoryplayer.cpp' || echo '$(srcdir)/'`../play/players/mcmemoryplayer.cpp

mcmemoryplayer.obj: ../play/players/mcmemoryplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcmemoryplayer.obj -MD -MP -MF $(DEPDIR)/mcmemoryplayer.Tpo -c -o mcmemoryplayer.obj `if test -f '../play/players/mcmemoryplayer.cpp'; then $(CYGPATH_W) '../play/players/mcmemoryplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mcmemoryplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/mcmemoryplayer.Tpo $(DEPDIR)/mcmemoryplayer.Po
#	source='../play/players/mcmemoryplayer.cpp' object='mcmemoryplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcmemoryplayer.obj `if test -f '../play/players/mcmemoryplayer.cpp'; then $(CYGPATH_W) '../play/players/mcmemoryplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mcmemoryplayer.cpp'; fi`

mcplayer.o: ../play/players/mcplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcplayer.o -MD -MP -MF $(DEPDIR)/mcplayer.Tpo -c -o mcplayer.o `test -f '../play/players/mcplayer.cpp' || echo '$(srcdir)/'`../play/players/mcplayer.cpp
	$(am__mv) $(DEPDIR)/mcplayer.Tpo $(DEPDIR)/mcplayer.Po
#	source='../play/players/mcplayer.cpp' object='mcplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcplayer.o `test -f '../play/players/mcplayer.cpp' || echo '$(srcdir)/'`../play/players/mcplayer.cpp

mcplayer.obj: ../play/players/mcplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mcplayer.obj -MD -MP -MF $(DEPDIR)/mcplayer.Tpo -c -o mcplayer.obj `if test -f '../play/players/mcplayer.cpp'; then $(CYGPATH_W) '../play/players/mcplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mcplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/mcplayer.Tpo $(DEPDIR)/mcplayer.Po
#	source='../play/players/mcplayer.cpp' object='mcplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mcplayer.obj `if test -f '../play/players/mcplayer.cpp'; then $(CYGPATH_W) '../play/players/mcplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mcplayer.cpp'; fi`

gt_file.o: ../play/utils/gt_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gt_file.o -MD -MP -MF $(DEPDIR)/gt_file.Tpo -c -o gt_file.o `test -f '../play/utils/gt_file.cpp' || echo '$(srcdir)/'`../play/utils/gt_file.cpp
	$(am__mv) $(DEPDIR)/gt_file.Tpo $(DEPDIR)/gt_file.Po
#	source='../play/utils/gt_file.cpp' object='gt_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gt_file.o `test -f '../play/utils/gt_file.cpp' || echo '$(srcdir)/'`../play/utils/gt_file.cpp

gt_file.obj: ../play/utils/gt_file.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gt_file.obj -MD -MP -MF $(DEPDIR)/gt_file.Tpo -c -o gt_file.obj `if test -f '../play/utils/gt_file.cpp'; then $(CYGPATH_W) '../play/utils/gt_file.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gt_file.cpp'; fi`
	$(am__mv) $(DEPDIR)/gt_file.Tpo $(DEPDIR)/gt_file.Po
#	source='../play/utils/gt_file.cpp' object='gt_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gt_file.obj `if test -f '../play/utils/gt_file.cpp'; then $(CYGPATH_W) '../play/utils/gt_file.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gt_file.cpp'; fi`

gt_log.o: ../play/utils/gt_log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gt_log.o -MD -MP -MF $(DEPDIR)/gt_log.Tpo -c -o gt_log.o `test -f '../play/utils/gt_log.cpp' || echo '$(srcdir)/'`../play/utils/gt_log.cpp
	$(am__mv) $(DEPDIR)/gt_log.Tpo $(DEPDIR)/gt_log.Po
#	source='../play/utils/gt_log.cpp' object='gt_log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gt_log.o `test -f '../play/utils/gt_log.cpp' || echo '$(srcdir)/'`../play/utils/gt_log.cpp

gt_log.obj: ../play/utils/gt_log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gt_log.obj -MD -MP -MF $(DEPDIR)/gt_log.Tpo -c -o gt_log.obj `if test -f '../play/utils/gt_log.cpp'; then $(CYGPATH_W) '../play/utils/gt_log.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gt_log.cpp'; fi`
	$(am__mv) $(DEPDIR)/gt_log.Tpo $(DEPDIR)/gt_log.Po
#	source='../play/utils/gt_log.cpp' object='gt_log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gt_log.obj `if test -f '../play/utils/gt_log.cpp'; then $(CYGPATH_W) '../play/utils/gt_log.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/gt_log.cpp'; fi`

pastplayer.o: ../play/players/pastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pastplayer.o -MD -MP -MF $(DEPDIR)/pastplayer.Tpo -c -o pastplayer.o `test -f '../play/players/pastplayer.cpp' || echo '$(srcdir)/'`../play/players/pastplayer.cpp
	$(am__mv) $(DEPDIR)/pastplayer.Tpo $(DEPDIR)/pastplayer.Po
#	source='../play/players/pastplayer.cpp' object='pastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pastplayer.o `test -f '../play/players/pastplayer.cpp' || echo '$(srcdir)/'`../play/players/pastplayer.cpp

pastplayer.obj: ../play/players/pastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pastplayer.obj -MD -MP -MF $(DEPDIR)/pastplayer.Tpo -c -o pastplayer.obj `if test -f '../play/players/pastplayer.cpp'; then $(CYGPATH_W) '../play/players/pastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/pastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/pastplayer.Tpo $(DEPDIR)/pastplayer.Po
#	source='../play/players/pastplayer.cpp' object='pastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pastplayer.obj `if test -f '../play/players/pastplayer.cpp'; then $(CYGPATH_W) '../play/players/pastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/pastplayer.cpp'; fi`

tomastplayer.o: ../play/players/tomastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tomastplayer.o -MD -MP -MF $(DEPDIR)/tomastplayer.Tpo -c -o tomastplayer.o `test -f '../play/players/tomastplayer.cpp' || echo '$(srcdir)/'`../play/players/tomastplayer.cpp
	$(am__mv) $(DEPDIR)/tomastplayer.Tpo $(DEPDIR)/tomastplayer.Po
#	source='../play/players/tomastplayer.cpp' object='tomastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tomastplayer.o `test -f '../play/players/tomastplayer.cpp' || echo '$(srcdir)/'`../play/players/tomastplayer.cpp

tomastplayer.obj: ../play/players/tomastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tomastplayer.obj -MD -MP -MF $(DEPDIR)/tomastplayer.Tpo -c -o tomastplayer.obj `if test -f '../play/players/tomastplayer.cpp'; then $(CYGPATH_W) '../play/players/tomastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/tomastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/tomastplayer.Tpo $(DEPDIR)/tomastplayer.Po
#	source='../play/players/tomastplayer.cpp' object='tomastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tomastplayer.obj `if test -f '../play/players/tomastplayer.cpp'; then $(CYGPATH_W) '../play/players/tomastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/tomastplayer.cpp'; fi`

mastplayer.o: ../play/players/mastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mastplayer.o -MD -MP -MF $(DEPDIR)/mastplayer.Tpo -c -o mastplayer.o `test -f '../play/players/mastplayer.cpp' || echo '$(srcdir)/'`../play/players/mastplayer.cpp
	$(am__mv) $(DEPDIR)/mastplayer.Tpo $(DEPDIR)/mastplayer.Po
#	source='../play/players/mastplayer.cpp' object='mastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mastplayer.o `test -f '../play/players/mastplayer.cpp' || echo '$(srcdir)/'`../play/players/mastplayer.cpp

mastplayer.obj: ../play/players/mastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mastplayer.obj -MD -MP -MF $(DEPDIR)/mastplayer.Tpo -c -o mastplayer.obj `if test -f '../play/players/mastplayer.cpp'; then $(CYGPATH_W) '../play/players/mastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/mastplayer.Tpo $(DEPDIR)/mastplayer.Po
#	source='../play/players/mastplayer.cpp' object='mastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mastplayer.obj `if test -f '../play/players/mastplayer.cpp'; then $(CYGPATH_W) '../play/players/mastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mastplayer.cpp'; fi`

uctrolloutplayer.o: ../play/players/uctrolloutplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctrolloutplayer.o -MD -MP -MF $(DEPDIR)/uctrolloutplayer.Tpo -c -o uctrolloutplayer.o `test -f '../play/players/uctrolloutplayer.cpp' || echo '$(srcdir)/'`../play/players/uctrolloutplayer.cpp
	$(am__mv) $(DEPDIR)/uctrolloutplayer.Tpo $(DEPDIR)/uctrolloutplayer.Po
#	source='../play/players/uctrolloutplayer.cpp' object='uctrolloutplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctrolloutplayer.o `test -f '../play/players/uctrolloutplayer.cpp' || echo '$(srcdir)/'`../play/players/uctrolloutplayer.cpp

uctrolloutplayer.obj: ../play/players/uctrolloutplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctrolloutplayer.obj -MD -MP -MF $(DEPDIR)/uctrolloutplayer.Tpo -c -o uctrolloutplayer.obj `if test -f '../play/players/uctrolloutplayer.cpp'; then $(CYGPATH_W) '../play/players/uctrolloutplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctrolloutplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/uctrolloutplayer.Tpo $(DEPDIR)/uctrolloutplayer.Po
#	source='../play/players/uctrolloutplayer.cpp' object='uctrolloutplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctrolloutplayer.obj `if test -f '../play/players/uctrolloutplayer.cpp'; then $(CYGPATH_W) '../play/players/uctrolloutplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctrolloutplayer.cpp'; fi`

uctplayer.o: ../play/players/uctplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctplayer.o -MD -MP -MF $(DEPDIR)/uctplayer.Tpo -c -o uctplayer.o `test -f '../play/players/uctplayer.cpp' || echo '$(srcdir)/'`../play/players/uctplayer.cpp
	$(am__mv) $(DEPDIR)/uctplayer.Tpo $(DEPDIR)/uctplayer.Po
#	source='../play/players/uctplayer.cpp' object='uctplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctplayer.o `test -f '../play/players/uctplayer.cpp' || echo '$(srcdir)/'`../play/players/uctplayer.cpp

uctplayer.obj: ../play/players/uctplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctplayer.obj -MD -MP -MF $(DEPDIR)/uctplayer.Tpo -c -o uctplayer.obj `if test -f '../play/players/uctplayer.cpp'; then $(CYGPATH_W) '../play/players/uctplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/uctplayer.Tpo $(DEPDIR)/uctplayer.Po
#	source='../play/players/uctplayer.cpp' object='uctplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctplayer.obj `if test -f '../play/players/uctplayer.cpp'; then $(CYGPATH_W) '../play/players/uctplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctplayer.cpp'; fi`

pastraveplayer.o: ../play/players/pastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pastraveplayer.o -MD -MP -MF $(DEPDIR)/pastraveplayer.Tpo -c -o pastraveplayer.o `test -f '../play/players/pastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/pastraveplayer.cpp
	$(am__mv) $(DEPDIR)/pastraveplayer.Tpo $(DEPDIR)/pastraveplayer.Po
#	source='../play/players/pastraveplayer.cpp' object='pastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pastraveplayer.o `test -f '../play/players/pastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/pastraveplayer.cpp

pastraveplayer.obj: ../play/players/pastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pastraveplayer.obj -MD -MP -MF $(DEPDIR)/pastraveplayer.Tpo -c -o pastraveplayer.obj `if test -f '../play/players/pastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/pastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/pastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/pastraveplayer.Tpo $(DEPDIR)/pastraveplayer.Po
#	source='../play/players/pastraveplayer.cpp' object='pastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pastraveplayer.obj `if test -f '../play/players/pastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/pastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/pastraveplayer.cpp'; fi`

tomastraveplayer.o: ../play/players/tomastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tomastraveplayer.o -MD -MP -MF $(DEPDIR)/tomastraveplayer.Tpo -c -o tomastraveplayer.o `test -f '../play/players/tomastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/tomastraveplayer.cpp
	$(am__mv) $(DEPDIR)/tomastraveplayer.Tpo $(DEPDIR)/tomastraveplayer.Po
#	source='../play/players/tomastraveplayer.cpp' object='tomastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tomastraveplayer.o `test -f '../play/players/tomastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/tomastraveplayer.cpp

tomastraveplayer.obj: ../play/players/tomastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tomastraveplayer.obj -MD -MP -MF $(DEPDIR)/tomastraveplayer.Tpo -c -o tomastraveplayer.obj `if test -f '../play/players/tomastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/tomastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/tomastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/tomastraveplayer.Tpo $(DEPDIR)/tomastraveplayer.Po
#	source='../play/players/tomastraveplayer.cpp' object='tomastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tomastraveplayer.obj `if test -f '../play/players/tomastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/tomastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/tomastraveplayer.cpp'; fi`

mastraveplayer.o: ../play/players/mastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mastraveplayer.o -MD -MP -MF $(DEPDIR)/mastraveplayer.Tpo -c -o mastraveplayer.o `test -f '../play/players/mastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/mastraveplayer.cpp
	$(am__mv) $(DEPDIR)/mastraveplayer.Tpo $(DEPDIR)/mastraveplayer.Po
#	source='../play/players/mastraveplayer.cpp' object='mastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mastraveplayer.o `test -f '../play/players/mastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/mastraveplayer.cpp

mastraveplayer.obj: ../play/players/mastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mastraveplayer.obj -MD -MP -MF $(DEPDIR)/mastraveplayer.Tpo -c -o mastraveplayer.obj `if test -f '../play/players/mastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/mastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/mastraveplayer.Tpo $(DEPDIR)/mastraveplayer.Po
#	source='../play/players/mastraveplayer.cpp' object='mastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mastraveplayer.obj `if test -f '../play/players/mastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/mastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/mastraveplayer.cpp'; fi`

uctraveplayer.o: ../play/players/uctraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctraveplayer.o -MD -MP -MF $(DEPDIR)/uctraveplayer.Tpo -c -o uctraveplayer.o `test -f '../play/players/uctraveplayer.cpp' || echo '$(srcdir)/'`../play/players/uctraveplayer.cpp
	$(am__mv) $(DEPDIR)/uctraveplayer.Tpo $(DEPDIR)/uctraveplayer.Po
#	source='../play/players/uctraveplayer.cpp' object='uctraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctraveplayer.o `test -f '../play/players/uctraveplayer.cpp' || echo '$(srcdir)/'`../play/players/uctraveplayer.cpp

uctraveplayer.obj: ../play/players/uctraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctraveplayer.obj -MD -MP -MF $(DEPDIR)/uctraveplayer.Tpo -c -o uctraveplayer.obj `if test -f '../play/players/uctraveplayer.cpp'; then $(CYGPATH_W) '../play/players/uctraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/uctraveplayer.Tpo $(DEPDIR)/uctraveplayer.Po
#	source='../play/players/uctraveplayer.cpp' object='uctraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctraveplayer.obj `if test -f '../play/players/uctraveplayer.cpp'; then $(CYGPATH_W) '../play/players/uctraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctraveplayer.cpp'; fi`

uctraverolloutplayer.o: ../play/players/uctraverolloutplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctraverolloutplayer.o -MD -MP -MF $(DEPDIR)/uctraverolloutplayer.Tpo -c -o uctraverolloutplayer.o `test -f '../play/players/uctraverolloutplayer.cpp' || echo '$(srcdir)/'`../play/players/uctraverolloutplayer.cpp
	$(am__mv) $(DEPDIR)/uctraverolloutplayer.Tpo $(DEPDIR)/uctraverolloutplayer.Po
#	source='../play/players/uctraverolloutplayer.cpp' object='uctraverolloutplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctraverolloutplayer.o `test -f '../play/players/uctraverolloutplayer.cpp' || echo '$(srcdir)/'`../play/players/uctraverolloutplayer.cpp

uctraverolloutplayer.obj: ../play/players/uctraverolloutplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT uctraverolloutplayer.obj -MD -MP -MF $(DEPDIR)/uctraverolloutplayer.Tpo -c -o uctraverolloutplayer.obj `if test -f '../play/players/uctraverolloutplayer.cpp'; then $(CYGPATH_W) '../play/players/uctraverolloutplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctraverolloutplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/uctraverolloutplayer.Tpo $(DEPDIR)/uctraverolloutplayer.Po
#	source='../play/players/uctraverolloutplayer.cpp' object='uctraverolloutplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o uctraverolloutplayer.obj `if test -f '../play/players/uctraverolloutplayer.cpp'; then $(CYGPATH_W) '../play/players/uctraverolloutplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/uctraverolloutplayer.cpp'; fi`

fastplayer.o: ../play/players/fastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastplayer.o -MD -MP -MF $(DEPDIR)/fastplayer.Tpo -c -o fastplayer.o `test -f '../play/players/fastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastplayer.cpp
	$(am__mv) $(DEPDIR)/fastplayer.Tpo $(DEPDIR)/fastplayer.Po
#	source='../play/players/fastplayer.cpp' object='fastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastplayer.o `test -f '../play/players/fastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastplayer.cpp

fastplayer.obj: ../play/players/fastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastplayer.obj -MD -MP -MF $(DEPDIR)/fastplayer.Tpo -c -o fastplayer.obj `if test -f '../play/players/fastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastplayer.Tpo $(DEPDIR)/fastplayer.Po
#	source='../play/players/fastplayer.cpp' object='fastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastplayer.obj `if test -f '../play/players/fastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastplayer.cpp'; fi`

fastraveplayer.o: ../play/players/fastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastraveplayer.o -MD -MP -MF $(DEPDIR)/fastraveplayer.Tpo -c -o fastraveplayer.o `test -f '../play/players/fastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastraveplayer.cpp
	$(am__mv) $(DEPDIR)/fastraveplayer.Tpo $(DEPDIR)/fastraveplayer.Po
#	source='../play/players/fastraveplayer.cpp' object='fastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastraveplayer.o `test -f '../play/players/fastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastraveplayer.cpp

fastraveplayer.obj: ../play/players/fastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastraveplayer.obj -MD -MP -MF $(DEPDIR)/fastraveplayer.Tpo -c -o fastraveplayer.obj `if test -f '../play/players/fastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastraveplayer.Tpo $(DEPDIR)/fastraveplayer.Po
#	source='../play/players/fastraveplayer.cpp' object='fastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastraveplayer.obj `if test -f '../play/players/fastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastraveplayer.cpp'; fi`

fastmastplayer.o: ../play/players/fastmastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastmastplayer.o -MD -MP -MF $(DEPDIR)/fastmastplayer.Tpo -c -o fastmastplayer.o `test -f '../play/players/fastmastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastmastplayer.cpp
	$(am__mv) $(DEPDIR)/fastmastplayer.Tpo $(DEPDIR)/fastmastplayer.Po
#	source='../play/players/fastmastplayer.cpp' object='fastmastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastmastplayer.o `test -f '../play/players/fastmastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastmastplayer.cpp

fastmastplayer.obj: ../play/players/fastmastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastmastplayer.obj -MD -MP -MF $(DEPDIR)/fastmastplayer.Tpo -c -o fastmastplayer.obj `if test -f '../play/players/fastmastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastmastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastmastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastmastplayer.Tpo $(DEPDIR)/fastmastplayer.Po
#	source='../play/players/fastmastplayer.cpp' object='fastmastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastmastplayer.obj `if test -f '../play/players/fastmastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastmastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastmastplayer.cpp'; fi`

fastmastraveplayer.o: ../play/players/fastmastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastmastraveplayer.o -MD -MP -MF $(DEPDIR)/fastmastraveplayer.Tpo -c -o fastmastraveplayer.o `test -f '../play/players/fastmastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastmastraveplayer.cpp
	$(am__mv) $(DEPDIR)/fastmastraveplayer.Tpo $(DEPDIR)/fastmastraveplayer.Po
#	source='../play/players/fastmastraveplayer.cpp' object='fastmastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastmastraveplayer.o `test -f '../play/players/fastmastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastmastraveplayer.cpp

fastmastraveplayer.obj: ../play/players/fastmastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastmastraveplayer.obj -MD -MP -MF $(DEPDIR)/fastmastraveplayer.Tpo -c -o fastmastraveplayer.obj `if test -f '../play/players/fastmastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastmastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastmastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastmastraveplayer.Tpo $(DEPDIR)/fastmastraveplayer.Po
#	source='../play/players/fastmastraveplayer.cpp' object='fastmastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastmastraveplayer.obj `if test -f '../play/players/fastmastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastmastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastmastraveplayer.cpp'; fi`

fasttomastplayer.o: ../play/players/fasttomastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fasttomastplayer.o -MD -MP -MF $(DEPDIR)/fasttomastplayer.Tpo -c -o fasttomastplayer.o `test -f '../play/players/fasttomastplayer.cpp' || echo '$(srcdir)/'`../play/players/fasttomastplayer.cpp
	$(am__mv) $(DEPDIR)/fasttomastplayer.Tpo $(DEPDIR)/fasttomastplayer.Po
#	source='../play/players/fasttomastplayer.cpp' object='fasttomastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fasttomastplayer.o `test -f '../play/players/fasttomastplayer.cpp' || echo '$(srcdir)/'`../play/players/fasttomastplayer.cpp

fasttomastplayer.obj: ../play/players/fasttomastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fasttomastplayer.obj -MD -MP -MF $(DEPDIR)/fasttomastplayer.Tpo -c -o fasttomastplayer.obj `if test -f '../play/players/fasttomastplayer.cpp'; then $(CYGPATH_W) '../play/players/fasttomastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fasttomastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fasttomastplayer.Tpo $(DEPDIR)/fasttomastplayer.Po
#	source='../play/players/fasttomastplayer.cpp' object='fasttomastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fasttomastplayer.obj `if test -f '../play/players/fasttomastplayer.cpp'; then $(CYGPATH_W) '../play/players/fasttomastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fasttomastplayer.cpp'; fi`

fasttomastraveplayer.o: ../play/players/fasttomastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fasttomastraveplayer.o -MD -MP -MF $(DEPDIR)/fasttomastraveplayer.Tpo -c -o fasttomastraveplayer.o `test -f '../play/players/fasttomastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fasttomastraveplayer.cpp
	$(am__mv) $(DEPDIR)/fasttomastraveplayer.Tpo $(DEPDIR)/fasttomastraveplayer.Po
#	source='../play/players/fasttomastraveplayer.cpp' object='fasttomastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fasttomastraveplayer.o `test -f '../play/players/fasttomastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fasttomastraveplayer.cpp

fasttomastraveplayer.obj: ../play/players/fasttomastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fasttomastraveplayer.obj -MD -MP -MF $(DEPDIR)/fasttomastraveplayer.Tpo -c -o fasttomastraveplayer.obj `if test -f '../play/players/fasttomastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fasttomastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fasttomastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fasttomastraveplayer.Tpo $(DEPDIR)/fasttomastraveplayer.Po
#	source='../play/players/fasttomastraveplayer.cpp' object='fasttomastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fasttomastraveplayer.obj `if test -f '../play/players/fasttomastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fasttomastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fasttomastraveplayer.cpp'; fi`

fastpastplayer.o: ../play/players/fastpastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastpastplayer.o -MD -MP -MF $(DEPDIR)/fastpastplayer.Tpo -c -o fastpastplayer.o `test -f '../play/players/fastpastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastpastplayer.cpp
	$(am__mv) $(DEPDIR)/fastpastplayer.Tpo $(DEPDIR)/fastpastplayer.Po
#	source='../play/players/fastpastplayer.cpp' object='fastpastplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastpastplayer.o `test -f '../play/players/fastpastplayer.cpp' || echo '$(srcdir)/'`../play/players/fastpastplayer.cpp

fastpastplayer.obj: ../play/players/fastpastplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastpastplayer.obj -MD -MP -MF $(DEPDIR)/fastpastplayer.Tpo -c -o fastpastplayer.obj `if test -f '../play/players/fastpastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastpastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastpastplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastpastplayer.Tpo $(DEPDIR)/fastpastplayer.Po
#	source='../play/players/fastpastplayer.cpp' object='fastpastplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastpastplayer.obj `if test -f '../play/players/fastpastplayer.cpp'; then $(CYGPATH_W) '../play/players/fastpastplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastpastplayer.cpp'; fi`

fastpastraveplayer.o: ../play/players/fastpastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastpastraveplayer.o -MD -MP -MF $(DEPDIR)/fastpastraveplayer.Tpo -c -o fastpastraveplayer.o `test -f '../play/players/fastpastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastpastraveplayer.cpp
	$(am__mv) $(DEPDIR)/fastpastraveplayer.Tpo $(DEPDIR)/fastpastraveplayer.Po
#	source='../play/players/fastpastraveplayer.cpp' object='fastpastraveplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastpastraveplayer.o `test -f '../play/players/fastpastraveplayer.cpp' || echo '$(srcdir)/'`../play/players/fastpastraveplayer.cpp

fastpastraveplayer.obj: ../play/players/fastpastraveplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fastpastraveplayer.obj -MD -MP -MF $(DEPDIR)/fastpastraveplayer.Tpo -c -o fastpastraveplayer.obj `if test -f '../play/players/fastpastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastpastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastpastraveplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/fastpastraveplayer.Tpo $(DEPDIR)/fastpastraveplayer.Po
#	source='../play/players/fastpastraveplayer.cpp' object='fastpastraveplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fastpastraveplayer.obj `if test -f '../play/players/fastpastraveplayer.cpp'; then $(CYGPATH_W) '../play/players/fastpastraveplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/fastpastraveplayer.cpp'; fi`

tilecoding.o: ../play/tiling/tilecoding.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilecoding.o -MD -MP -MF $(DEPDIR)/tilecoding.Tpo -c -o tilecoding.o `test -f '../play/tiling/tilecoding.cpp' || echo '$(srcdir)/'`../play/tiling/tilecoding.cpp
	$(am__mv) $(DEPDIR)/tilecoding.Tpo $(DEPDIR)/tilecoding.Po
#	source='../play/tiling/tilecoding.cpp' object='tilecoding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilecoding.o `test -f '../play/tiling/tilecoding.cpp' || echo '$(srcdir)/'`../play/tiling/tilecoding.cpp

tilecoding.obj: ../play/tiling/tilecoding.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilecoding.obj -MD -MP -MF $(DEPDIR)/tilecoding.Tpo -c -o tilecoding.obj `if test -f '../play/tiling/tilecoding.cpp'; then $(CYGPATH_W) '../play/tiling/tilecoding.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/tilecoding.cpp'; fi`
	$(am__mv) $(DEPDIR)/tilecoding.Tpo $(DEPDIR)/tilecoding.Po
#	source='../play/tiling/tilecoding.cpp' object='tilecoding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilecoding.obj `if test -f '../play/tiling/tilecoding.cpp'; then $(CYGPATH_W) '../play/tiling/tilecoding.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/tilecoding.cpp'; fi`

tilecodinglearner.o: ../play/tiling/tilecodinglearner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilecodinglearner.o -MD -MP -MF $(DEPDIR)/tilecodinglearner.Tpo -c -o tilecodinglearner.o `test -f '../play/tiling/tilecodinglearner.cpp' || echo '$(srcdir)/'`../play/tiling/tilecodinglearner.cpp
	$(am__mv) $(DEPDIR)/tilecodinglearner.Tpo $(DEPDIR)/tilecodinglearner.Po
#	source='../play/tiling/tilecodinglearner.cpp' object='tilecodinglearner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilecodinglearner.o `test -f '../play/tiling/tilecodinglearner.cpp' || echo '$(srcdir)/'`../play/tiling/tilecodinglearner.cpp

tilecodinglearner.obj: ../play/tiling/tilecodinglearner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilecodinglearner.obj -MD -MP -MF $(DEPDIR)/tilecodinglearner.Tpo -c -o tilecodinglearner.obj `if test -f '../play/tiling/tilecodinglearner.cpp'; then $(CYGPATH_W) '../play/tiling/tilecodinglearner.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/tilecodinglearner.cpp'; fi`
	$(am__mv) $(DEPDIR)/tilecodinglearner.Tpo $(DEPDIR)/tilecodinglearner.Po
#	source='../play/tiling/tilecodinglearner.cpp' object='tilecodinglearner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilecodinglearner.obj `if test -f '../play/tiling/tilecodinglearner.cpp'; then $(CYGPATH_W) '../play/tiling/tilecodinglearner.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/tilecodinglearner.cpp'; fi`

valuetiling.o: ../play/tiling/valuetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT valuetiling.o -MD -MP -MF $(DEPDIR)/valuetiling.Tpo -c -o valuetiling.o `test -f '../play/tiling/valuetiling.cpp' || echo '$(srcdir)/'`../play/tiling/valuetiling.cpp
	$(am__mv) $(DEPDIR)/valuetiling.Tpo $(DEPDIR)/valuetiling.Po
#	source='../play/tiling/valuetiling.cpp' object='valuetiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o valuetiling.o `test -f '../play/tiling/valuetiling.cpp' || echo '$(srcdir)/'`../play/tiling/valuetiling.cpp

valuetiling.obj: ../play/tiling/valuetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT valuetiling.obj -MD -MP -MF $(DEPDIR)/valuetiling.Tpo -c -o valuetiling.obj `if test -f '../play/tiling/valuetiling.cpp'; then $(CYGPATH_W) '../play/tiling/valuetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/valuetiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/valuetiling.Tpo $(DEPDIR)/valuetiling.Po
#	source='../play/tiling/valuetiling.cpp' object='valuetiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o valuetiling.obj `if test -f '../play/tiling/valuetiling.cpp'; then $(CYGPATH_W) '../play/tiling/valuetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/valuetiling.cpp'; fi`

compoundtiling.o: ../play/tiling/compoundtiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundtiling.o -MD -MP -MF $(DEPDIR)/compoundtiling.Tpo -c -o compoundtiling.o `test -f '../play/tiling/compoundtiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundtiling.cpp
	$(am__mv) $(DEPDIR)/compoundtiling.Tpo $(DEPDIR)/compoundtiling.Po
#	source='../play/tiling/compoundtiling.cpp' object='compoundtiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundtiling.o `test -f '../play/tiling/compoundtiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundtiling.cpp

compoundtiling.obj: ../play/tiling/compoundtiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundtiling.obj -MD -MP -MF $(DEPDIR)/compoundtiling.Tpo -c -o compoundtiling.obj `if test -f '../play/tiling/compoundtiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundtiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundtiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/compoundtiling.Tpo $(DEPDIR)/compoundtiling.Po
#	source='../play/tiling/compoundtiling.cpp' object='compoundtiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundtiling.obj `if test -f '../play/tiling/compoundtiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundtiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundtiling.cpp'; fi`

compoundvaluetiling.o: ../play/tiling/compoundvaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundvaluetiling.o -MD -MP -MF $(DEPDIR)/compoundvaluetiling.Tpo -c -o compoundvaluetiling.o `test -f '../play/tiling/compoundvaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundvaluetiling.cpp
	$(am__mv) $(DEPDIR)/compoundvaluetiling.Tpo $(DEPDIR)/compoundvaluetiling.Po
#	source='../play/tiling/compoundvaluetiling.cpp' object='compoundvaluetiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundvaluetiling.o `test -f '../play/tiling/compoundvaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundvaluetiling.cpp

compoundvaluetiling.obj: ../play/tiling/compoundvaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundvaluetiling.obj -MD -MP -MF $(DEPDIR)/compoundvaluetiling.Tpo -c -o compoundvaluetiling.obj `if test -f '../play/tiling/compoundvaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundvaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundvaluetiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/compoundvaluetiling.Tpo $(DEPDIR)/compoundvaluetiling.Po
#	source='../play/tiling/compoundvaluetiling.cpp' object='compoundvaluetiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundvaluetiling.obj `if test -f '../play/tiling/compoundvaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundvaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundvaluetiling.cpp'; fi`

compoundmultivaluetiling.o: ../play/tiling/compoundmultivaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundmultivaluetiling.o -MD -MP -MF $(DEPDIR)/compoundmultivaluetiling.Tpo -c -o compoundmultivaluetiling.o `test -f '../play/tiling/compoundmultivaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundmultivaluetiling.cpp
	$(am__mv) $(DEPDIR)/compoundmultivaluetiling.Tpo $(DEPDIR)/compoundmultivaluetiling.Po
#	source='../play/tiling/compoundmultivaluetiling.cpp' object='compoundmultivaluetiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundmultivaluetiling.o `test -f '../play/tiling/compoundmultivaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/compoundmultivaluetiling.cpp

compoundmultivaluetiling.obj: ../play/tiling/compoundmultivaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compoundmultivaluetiling.obj -MD -MP -MF $(DEPDIR)/compoundmultivaluetiling.Tpo -c -o compoundmultivaluetiling.obj `if test -f '../play/tiling/compoundmultivaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundmultivaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundmultivaluetiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/compoundmultivaluetiling.Tpo $(DEPDIR)/compoundmultivaluetiling.Po
#	source='../play/tiling/compoundmultivaluetiling.cpp' object='compoundmultivaluetiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compoundmultivaluetiling.obj `if test -f '../play/tiling/compoundmultivaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/compoundmultivaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/compoundmultivaluetiling.cpp'; fi`

rolepiecetiling.o: ../play/tiling/rolepiecetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rolepiecetiling.o -MD -MP -MF $(DEPDIR)/rolepiecetiling.Tpo -c -o rolepiecetiling.o `test -f '../play/tiling/rolepiecetiling.cpp' || echo '$(srcdir)/'`../play/tiling/rolepiecetiling.cpp
	$(am__mv) $(DEPDIR)/rolepiecetiling.Tpo $(DEPDIR)/rolepiecetiling.Po
#	source='../play/tiling/rolepiecetiling.cpp' object='rolepiecetiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rolepiecetiling.o `test -f '../play/tiling/rolepiecetiling.cpp' || echo '$(srcdir)/'`../play/tiling/rolepiecetiling.cpp

rolepiecetiling.obj: ../play/tiling/rolepiecetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rolepiecetiling.obj -MD -MP -MF $(DEPDIR)/rolepiecetiling.Tpo -c -o rolepiecetiling.obj `if test -f '../play/tiling/rolepiecetiling.cpp'; then $(CYGPATH_W) '../play/tiling/rolepiecetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/rolepiecetiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/rolepiecetiling.Tpo $(DEPDIR)/rolepiecetiling.Po
#	source='../play/tiling/rolepiecetiling.cpp' object='rolepiecetiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rolepiecetiling.obj `if test -f '../play/tiling/rolepiecetiling.cpp'; then $(CYGPATH_W) '../play/tiling/rolepiecetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/rolepiecetiling.cpp'; fi`

piecevaluetiling.o: ../play/tiling/piecevaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT piecevaluetiling.o -MD -MP -MF $(DEPDIR)/piecevaluetiling.Tpo -c -o piecevaluetiling.o `test -f '../play/tiling/piecevaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/piecevaluetiling.cpp
	$(am__mv) $(DEPDIR)/piecevaluetiling.Tpo $(DEPDIR)/piecevaluetiling.Po
#	source='../play/tiling/piecevaluetiling.cpp' object='piecevaluetiling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o piecevaluetiling.o `test -f '../play/tiling/piecevaluetiling.cpp' || echo '$(srcdir)/'`../play/tiling/piecevaluetiling.cpp

piecevaluetiling.obj: ../play/tiling/piecevaluetiling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT piecevaluetiling.obj -MD -MP -MF $(DEPDIR)/piecevaluetiling.Tpo -c -o piecevaluetiling.obj `if test -f '../play/tiling/piecevaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/piecevaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/piecevaluetiling.cpp'; fi`
	$(am__mv) $(DEPDIR)/piecevaluetiling.Tpo $(DEPDIR)/piecevaluetiling.Po
#	source='../play/tiling/piecevaluetiling.cpp' object='piecevaluetiling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o piecevaluetiling.obj `if test -f '../play/tiling/piecevaluetiling.cpp'; then $(CYGPATH_W) '../play/tiling/piecevaluetiling.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/tiling/piecevaluetiling.cpp'; fi`

tilingplayerkit.o: ../play/kits/tilingplayerkit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilingplayerkit.o -MD -MP -MF $(DEPDIR)/tilingplayerkit.Tpo -c -o tilingplayerkit.o `test -f '../play/kits/tilingplayerkit.cpp' || echo '$(srcdir)/'`../play/kits/tilingplayerkit.cpp
	$(am__mv) $(DEPDIR)/tilingplayerkit.Tpo $(DEPDIR)/tilingplayerkit.Po
#	source='../play/kits/tilingplayerkit.cpp' object='tilingplayerkit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilingplayerkit.o `test -f '../play/kits/tilingplayerkit.cpp' || echo '$(srcdir)/'`../play/kits/tilingplayerkit.cpp

tilingplayerkit.obj: ../play/kits/tilingplayerkit.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tilingplayerkit.obj -MD -MP -MF $(DEPDIR)/tilingplayerkit.Tpo -c -o tilingplayerkit.obj `if test -f '../play/kits/tilingplayerkit.cpp'; then $(CYGPATH_W) '../play/kits/tilingplayerkit.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/kits/tilingplayerkit.cpp'; fi`
	$(am__mv) $(DEPDIR)/tilingplayerkit.Tpo $(DEPDIR)/tilingplayerkit.Po
#	source='../play/kits/tilingplayerkit.cpp' object='tilingplayerkit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tilingplayerkit.obj `if test -f '../play/kits/tilingplayerkit.cpp'; then $(CYGPATH_W) '../play/kits/tilingplayerkit.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/kits/tilingplayerkit.cpp'; fi`

randomplayer.o: ../play/players/randomplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randomplayer.o -MD -MP -MF $(DEPDIR)/randomplayer.Tpo -c -o randomplayer.o `test -f '../play/players/randomplayer.cpp' || echo '$(srcdir)/'`../play/players/randomplayer.cpp
	$(am__mv) $(DEPDIR)/randomplayer.Tpo $(DEPDIR)/randomplayer.Po
#	source='../play/players/randomplayer.cpp' object='randomplayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randomplayer.o `test -f '../play/players/randomplayer.cpp' || echo '$(srcdir)/'`../play/players/randomplayer.cpp

randomplayer.obj: ../play/players/randomplayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randomplayer.obj -MD -MP -MF $(DEPDIR)/randomplayer.Tpo -c -o randomplayer.obj `if test -f '../play/players/randomplayer.cpp'; then $(CYGPATH_W) '../play/players/randomplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/randomplayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/randomplayer.Tpo $(DEPDIR)/randomplayer.Po
#	source='../play/players/randomplayer.cpp' object='randomplayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randomplayer.obj `if test -f '../play/players/randomplayer.cpp'; then $(CYGPATH_W) '../play/players/randomplayer.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/players/randomplayer.cpp'; fi`

movepredicatefeature.o: ../play/utils/movepredicatefeature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movepredicatefeature.o -MD -MP -MF $(DEPDIR)/movepredicatefeature.Tpo -c -o movepredicatefeature.o `test -f '../play/utils/movepredicatefeature.cpp' || echo '$(srcdir)/'`../play/utils/movepredicatefeature.cpp
	$(am__mv) $(DEPDIR)/movepredicatefeature.Tpo $(DEPDIR)/movepredicatefeature.Po
#	source='../play/utils/movepredicatefeature.cpp' object='movepredicatefeature.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movepredicatefeature.o `test -f '../play/utils/movepredicatefeature.cpp' || echo '$(srcdir)/'`../play/utils/movepredicatefeature.cpp

movepredicatefeature.obj: ../play/utils/movepredicatefeature.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT movepredicatefeature.obj -MD -MP -MF $(DEPDIR)/movepredicatefeature.Tpo -c -o movepredicatefeature.obj `if test -f '../play/utils/movepredicatefeature.cpp'; then $(CYGPATH_W) '../play/utils/movepredicatefeature.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/movepredicatefeature.cpp'; fi`
	$(am__mv) $(DEPDIR)/movepredicatefeature.Tpo $(DEPDIR)/movepredicatefeature.Po
#	source='../play/utils/movepredicatefeature.cpp' object='movepredicatefeature.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o movepredicatefeature.obj `if test -f '../play/utils/movepredicatefeature.cpp'; then $(CYGPATH_W) '../play/utils/movepredicatefeature.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/movepredicatefeature.cpp'; fi`

episode.o: ../play/utils/episode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT episode.o -MD -MP -MF $(DEPDIR)/episode.Tpo -c -o episode.o `test -f '../play/utils/episode.cpp' || echo '$(srcdir)/'`../play/utils/episode.cpp
	$(am__mv) $(DEPDIR)/episode.Tpo $(DEPDIR)/episode.Po
#	source='../play/utils/episode.cpp' object='episode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o episode.o `test -f '../play/utils/episode.cpp' || echo '$(srcdir)/'`../play/utils/episode.cpp

episode.obj: ../play/utils/episode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT episode.obj -MD -MP -MF $(DEPDIR)/episode.Tpo -c -o episode.obj `if test -f '../play/utils/episode.cpp'; then $(CYGPATH_W) '../play/utils/episode.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/episode.cpp'; fi`
	$(am__mv) $(DEPDIR)/episode.Tpo $(DEPDIR)/episode.Po
#	source='../play/utils/episode.cpp' object='episode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o episode.obj `if test -f '../play/utils/episode.cpp'; then $(CYGPATH_W) '../play/utils/episode.cpp'; else $(CYGPATH_W) '$(srcdir)/../play/utils/episode.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


#			../play/players/smabplayer.cpp ../play/players/smabplayer.h

#			../play/players/pastplayer.cpp ../play/players/pastplayer.h \
#			../play/players/domainplayer.cpp ../play/players/domainplayer.h \
#			../play/players/tomastplayer.cpp ../play/players/tomastplayer.h \
#			../play/utils/movereply.cpp ../play/utils/movereply.h \
#			../play/players/uctreplyplayer.cpp ../play/players/uctreplyplayer.h \
#			../play/players/asyncplayer.cpp ../play/players/asyncplayer.h \
#			../play/players/mmuctplayer.cpp ../play/players/mmuctplayer.h \
#			../play/players/skirmishplayer.cpp ../play/players/skirmishplayer.h \
#			../play/players/uctdlambdaplayer.cpp ../play/players/uctdlambdaplayer.h \
#			../play/players/uctdlambdapieceplayer.cpp ../play/players/uctdlambdapieceplayer.h \
#			../play/players/ucttestplayer.cpp ../play/players/ucttestplayer.h \
#			../play/players/goalestimationplayer.cpp ../play/players/goalestimationplayer.h \
#			../play/players/competitionplayer.cpp ../play/players/competitionplayer.h \
#			../play/players/raveplayer.cpp ../play/players/raveplayer.h \
#			../play/players/decayplayer.cpp ../play/players/decayplayer.h \
#			../play/players/uctraveonlyplayer.cpp ../play/players/uctraveonlyplayer.h \
#			../play/players/secondlookplayer.cpp ../play/players/secondlookplayer.h

#ANALYZING = ../play/utils/gamestats.cpp ../play/utils/gamestats.h \
#			../play/utils/traversalelements.cpp ../play/utils/traversalelements.h \
#			../play/utils/dftraverser.cpp ../play/utils/dftraverser.h \
#			../play/utils/traverser.cpp ../play/utils/traverser.h \
#			../play/utils/treelogvisitor.cpp ../play/utils/treelogvisitor.h \
#			../utils/treelog.cpp ../utils/treelog.h \
#			../utils/strutils.h \
#			../play/players/randomplayer.cpp ../play/players/randomplayer.h \
#			../play/utils/visitor.h

#ravefastagent_SOURCES = 	ravefastagent.cpp \
#			../play/players/ravecomboplayer.cpp ../play/players/ravecomboplayer.h \
#			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
#			$(UCT_SHARED) \
#			$(TILING_SHARED)

#mastfastagent_SOURCES = 	mastfastagent.cpp \
#			../play/players/comboplayer.cpp ../play/players/comboplayer.h \
#			$(UCT_SHARED) \
#			$(TILING_SHARED)

#ravemastfastagent_SOURCES = 	ravemastfastagent.cpp \
#			../play/players/mastcomboplayer.cpp ../play/players/mastcomboplayer.h \
#			../play/players/mastraveplayer.cpp ../play/players/mastraveplayer.h \
#			../play/players/uctraveplayer.cpp ../play/players/uctraveplayer.h \
#			$(UCT_SHARED) \
#			$(TILING_SHARED)

#testplayer_SOURCES = 	testplayer.cpp \
#			$(CUTOFF_SHARED) \
#			$(UCT_SHARED) \
#			$(MM_SHARED) \
#			$(TILING_SHARED) \
#			$(EXTRA_PLAYERS) \
#			$(EXTRA_UTILS)
#			 \
#			$(SHMEM_SHARED)

#testplayer2_SOURCES = 	testplayer2.cpp \
#			$(CUTOFF_SHARED) \
#			$(UCT_SHARED) \
#			$(MM_SHARED) \
#			$(TILING_SHARED) \
#			$(EXTRA_PLAYERS) \
#			$(EXTRA_UTILS)
#			 \
#			$(SHMEM_SHARED)

#analyzer_SOURCES = 	analyzer.cpp \
#			$(ANALYZING) \
#			$(SHARED_SOURCES)

#fluxagent_SOURCES = 	fluxagent.cpp \
#			$(SHARED_SOURCES) \
#			../utils/fluxconnector.cpp ../utils/fluxconnector.h \
#			../play/players/fluxplayer.cpp ../play/players/fluxplayer.h

#ucthagent_SOURCES = 	ucthagent.cpp \
#			$(UCT_SHARED) \
#			../utils/fluxconnector.cpp ../utils/fluxconnector.h \
#			../play/players/uctheuristicsplayer.cpp ../play/players/uctheuristicsplayer.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
